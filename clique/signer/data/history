eth.getBalance(eth.accounts[0])
eth.accounts
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
abi=[{"constant":false,"inputs":[{"name":"amount","type":"uint256"}, {"name":"nonce","type":"uint256"}, {"name":"signature","type":"bytes"}], "name":"claimPayment","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"sig","type":"bytes"}], "name":"splitSignature", "outputs":[{"name":"v","type":"uint8"}, {"name":"r","type":"bytes32"}, {"name":"s","type":"bytes32"}],"payable":false,"type":"function"},{"constant":true,"input":[{"name":"message","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"hash","type":"bytes32"}],"name":"prefixed","outputs":[{"name":"","type":"bytes32"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"type":"function"},{"inputs":[],"payable":true,"type":"constructor"}]
sample=eth.contract(abi)
SampleHEX="0x608060405260008054600160a060020a03191633179055610355806100256000396000f30060806040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166341c0e1b58114610050578063a90ae88714610067575b600080fd5b34801561005c57600080fd5b50610065610126565b005b34801561007357600080fd5b506100656004803603606081101561008a57600080fd5b8135916020810135918101906060810160408201356401000000008111156100b157600080fd5b8201836020820111156100c357600080fd5b803590602001918460018302840111640100000000831117156100e557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061014d945050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461014a57600080fd5b33ff5b604080516c0100000000000000000000000033810260208084019190915260348301879052605483018690523091909102607483015282516068818403018152608890920190925280519101206000906101a690610220565b60005490915073ffffffffffffffffffffffffffffffffffffffff166101cc8284610271565b73ffffffffffffffffffffffffffffffffffffffff16146101ec57600080fd5b604051339085156108fc029086906000818181858888f19350505050158015610219573d6000803e3d6000fd5b5050505050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b600080600080610280856102f8565b92509250925060058684848460405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156102e3573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060008351604114151561030d57600080fd5b5050506020810151604082015160609092015160001a929091905600a165627a7a723058209790dcb8b1e82250332931237e20c3da236b28d34bca3d175c782adfbf319ff50029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000})
txpool.status
eth.blockNumber
miner.start()
miner.stop()
eth.getBlock(1)
samplerecpt=eth.getTransactionReceipt("0x5645e275a7b78211a83203102a46ac909f28ed6993d5975cef74f62d3ff21607")
samplecontract=sample.at("0x24982f9b8794793a3570f733348abb3bbb539759")
abi=[{"constant":false,"inputs":[{"name":"amount","type":"uint256"}, {"name":"nonce","type":"uint256"}, {"name":"signature","type":"bytes"}], "name":"claimPayment","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"sig","type":"bytes"}], "name":"splitSignature", "outputs":[{"name":"v","type":"uint8"}, {"name":"r","type":"bytes32"}, {"name":"s","type":"bytes32"}],"payable":false,"type":"function"},{"constant":true,"input":[{"name":"message","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"hash","type":"bytes32"}],"name":"prefixed","outputs":[{"name":"","type":"bytes32"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"type":"function"},{"inputs":[],"payable":true,"type":"constructor"}]
sample=eth.contract(abi)
SampleHEX="608060405260008054600160a060020a03191633179055610355806100256000396000f30060806040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166341c0e1b58114610050578063a90ae88714610067575b600080fd5b34801561005c57600080fd5b50610065610126565b005b34801561007357600080fd5b506100656004803603606081101561008a57600080fd5b8135916020810135918101906060810160408201356401000000008111156100b157600080fd5b8201836020820111156100c357600080fd5b803590602001918460018302840111640100000000831117156100e557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061014d945050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461014a57600080fd5b33ff5b604080516c0100000000000000000000000033810260208084019190915260348301879052605483018690523091909102607483015282516068818403018152608890920190925280519101206000906101a690610220565b60005490915073ffffffffffffffffffffffffffffffffffffffff166101cc8284610271565b73ffffffffffffffffffffffffffffffffffffffff16146101ec57600080fd5b604051339085156108fc029086906000818181858888f19350505050158015610219573d6000803e3d6000fd5b5050505050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b600080600080610280856102f8565b925092509250600b8684848460405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156102e3573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060008351604114151561030d57600080fd5b5050506020810151604082015160609092015160001a929091905600a165627a7a723058209790dcb8b1e82250332931237e20c3da236b28d34bca3d175c782adfbf319ff50029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000})
SampleHEX="0x608060405260008054600160a060020a03191633179055610355806100256000396000f30060806040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166341c0e1b58114610050578063a90ae88714610067575b600080fd5b34801561005c57600080fd5b50610065610126565b005b34801561007357600080fd5b506100656004803603606081101561008a57600080fd5b8135916020810135918101906060810160408201356401000000008111156100b157600080fd5b8201836020820111156100c357600080fd5b803590602001918460018302840111640100000000831117156100e557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061014d945050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461014a57600080fd5b33ff5b604080516c0100000000000000000000000033810260208084019190915260348301879052605483018690523091909102607483015282516068818403018152608890920190925280519101206000906101a690610220565b60005490915073ffffffffffffffffffffffffffffffffffffffff166101cc8284610271565b73ffffffffffffffffffffffffffffffffffffffff16146101ec57600080fd5b604051339085156108fc029086906000818181858888f19350505050158015610219573d6000803e3d6000fd5b5050505050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b600080600080610280856102f8565b925092509250600b8684848460405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156102e3573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060008351604114151561030d57600080fd5b5050506020810151604082015160609092015160001a929091905600a165627a7a723058209790dcb8b1e82250332931237e20c3da236b28d34bca3d175c782adfbf319ff50029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000})
txpool.status
miner.start()
miner.stop()
eth.getBlock(3)
samplerecpt=eth.getTransactionReceipt("0x906a2baaa2efe67addcbe6eb2795af160c15bb8bf49c84d70908a9cbb116d7d6")
samplecontract=sample.at("0xf8b0e18c6d284e6f216a633800c6a01f9f48bebf")
abi=[{"constant":false,"inputs":[{"name":"amount","type":"uint256"}, {"name":"nonce","type":"uint256"}, {"name":"signature","type":"bytes"}], "name":"claimPayment","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"sig","type":"bytes"}], "name":"splitSignature", "outputs":[{"name":"v","type":"uint8"}, {"name":"r","type":"bytes32"}, {"name":"s","type":"bytes32"}],"payable":false,"type":"function"},{"constant":true,"input":[{"name":"message","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"hash","type":"bytes32"}],"name":"prefixed","outputs":[{"name":"","type":"bytes32"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"type":"function"},{"inputs":[],"payable":true,"type":"constructor"}]
sample=eth.contract(abi)
SampleHEX="0x608060405260008054600160a060020a03191633179055610355806100256000396000f30060806040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166341c0e1b58114610050578063a90ae88714610067575b600080fd5b34801561005c57600080fd5b50610065610126565b005b34801561007357600080fd5b506100656004803603606081101561008a57600080fd5b8135916020810135918101906060810160408201356401000000008111156100b157600080fd5b8201836020820111156100c357600080fd5b803590602001918460018302840111640100000000831117156100e557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061014d945050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461014a57600080fd5b33ff5b604080516c0100000000000000000000000033810260208084019190915260348301879052605483018690523091909102607483015282516068818403018152608890920190925280519101206000906101a690610220565b60005490915073ffffffffffffffffffffffffffffffffffffffff166101cc8284610271565b73ffffffffffffffffffffffffffffffffffffffff16146101ec57600080fd5b604051339085156108fc029086906000818181858888f19350505050158015610219573d6000803e3d6000fd5b5050505050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b600080600080610280856102f8565b92509250925060018684848460405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156102e3573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060008351604114151561030d57600080fd5b5050506020810151604082015160609092015160001a929091905600a165627a7a72305820d3b206ce1822aaa5fdaabd3787db674fa6d4522ac512027ad7438a0e63b5668d0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000})
txpool.status
miner.start()
miner.stop()
eth.getBlock(5)
samplerecpt=eth.getTransactionReceipt("0xb10338ce72c4ef69fabbc0d817dd44acce1f4b6f4d7a5d28f9fac2bbf353dfbd")
samplecontract=sample.at("0x2d05e6b9600f17a645a8f5a0aef3ae59baaf21db")
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
abi=[{"constant":false,"inputs":[{"name":"amount","type":"uint256"}, {"name":"nonce","type":"uint256"}, {"name":"signature","type":"bytes"}], "name":"claimPayment","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"sig","type":"bytes"}], "name":"splitSignature", "outputs":[{"name":"v","type":"uint8"}, {"name":"r","type":"bytes32"}, {"name":"s","type":"bytes32"}],"payable":false,"type":"function"},{"constant":true,"input":[{"name":"message","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"hash","type":"bytes32"}],"name":"prefixed","outputs":[{"name":"","type":"bytes32"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"type":"function"},{"inputs":[],"payable":true,"type":"constructor"}]
sample=eth.contract(abi)
SampleHEX="0x608060405260008054600160a060020a03191633179055610355806100256000396000f30060806040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166341c0e1b58114610050578063a90ae88714610067575b600080fd5b34801561005c57600080fd5b50610065610126565b005b34801561007357600080fd5b506100656004803603606081101561008a57600080fd5b8135916020810135918101906060810160408201356401000000008111156100b157600080fd5b8201836020820111156100c357600080fd5b803590602001918460018302840111640100000000831117156100e557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061014d945050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461014a57600080fd5b33ff5b604080516c0100000000000000000000000033810260208084019190915260348301879052605483018690523091909102607483015282516068818403018152608890920190925280519101206000906101a690610220565b60005490915073ffffffffffffffffffffffffffffffffffffffff166101cc8284610271565b73ffffffffffffffffffffffffffffffffffffffff16146101ec57600080fd5b604051339085156108fc029086906000818181858888f19350505050158015610219573d6000803e3d6000fd5b5050505050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b600080600080610280856102f8565b92509250925060018684848460405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156102e3573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060008351604114151561030d57600080fd5b5050506020810151604082015160609092015160001a929091905600a165627a7a7230582093dd10a78b17ab9911ae5b6c0f1b72a81bcf763fa2032a5703cb70dfe0dffb590029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000})
txpool.status
miner.start()
miner.stop()
eth.getBlock(6)
samplerecpt=eth.getTransactionReceipt("0xe760a093dd8f5d6a5ca660ef638362b1b52e0d8f257933229e67c3459c8632fc")
samplecontract=sample.at("0x5921b25ffaad23f9921a24fb96517bd5cde72054")
sample
var verifysignatureContract = web3.eth.contract([{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"},{"name":"nonce","type":"uint256"},{"name":"signature","type":"bytes"}],"name":"claimPayment","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"}]);
var verifysignature = verifysignatureContract.new(
   {
     from: web3.eth.accounts[0], 
     data: '0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104eb806100536000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b514610051578063a90ae88714610068575b600080fd5b34801561005d57600080fd5b506100666100e5565b005b34801561007457600080fd5b506100e36004803603810190808035906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610159565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561014057600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b600061027333858530604051602001808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019450505050506040516020818303038152906040526040518082805190602001908083835b602083101515610241578051825260208201915060208101905060208303925061021c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020610326565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166102b782846103e1565b73ffffffffffffffffffffffffffffffffffffffff161415156102d957600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc859081150290604051600060405180830381858888f1935050505015801561031f573d6000803e3d6000fd5b5050505050565b60008160405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b6020831015156103ad5780518252602082019150602081019050602083039250610388565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050919050565b6000806000806103f085610482565b925092509250600186848484604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af115801561046d573d6000803e3d6000fd5b50505060206040510351935050505092915050565b60008060006041845114151561049757600080fd5b6020840151915060408401519050606084015160001a925082828292509250925091939092505600a165627a7a723058202114b47f206080f28eb910c06d073ed947dda4b82902d3990dfec6b89ea18bc10029', 
     gas: '4700000'
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
eth.getBlock(8)
eth.getTransactionReceipt("0x5291222ff3ce2302a5e3c6e70d74edb005b8694a958ea45dc8c5ea149bf73555")
samplecontract = verifysignature.at("0xc470748f9e2d06ae174ba3c747bf3ed0b4fc093a")
samplecontract = verifysignatureContract.at("0xc470748f9e2d06ae174ba3c747bf3ed0b4fc093a")
abi=[{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"},{"name":"nonce","type":"uint256"},{"name":"signature","type":"bytes"}],"name":"claimPayment","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"}])
abi=[{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"},{"name":"nonce","type":"uint256"},{"name":"signature","type":"bytes"}],"name":"claimPayment","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"}]
sample=eth.contract(abi)
SampleHEX="0x608060405260008054600160a060020a03191633179055610355806100256000396000f30060806040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166341c0e1b58114610050578063a90ae88714610067575b600080fd5b34801561005c57600080fd5b50610065610126565b005b34801561007357600080fd5b506100656004803603606081101561008a57600080fd5b8135916020810135918101906060810160408201356401000000008111156100b157600080fd5b8201836020820111156100c357600080fd5b803590602001918460018302840111640100000000831117156100e557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061014d945050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461014a57600080fd5b33ff5b604080516c0100000000000000000000000033810260208084019190915260348301879052605483018690523091909102607483015282516068818403018152608890920190925280519101206000906101a690610220565b60005490915073ffffffffffffffffffffffffffffffffffffffff166101cc8284610271565b73ffffffffffffffffffffffffffffffffffffffff16146101ec57600080fd5b604051339085156108fc029086906000818181858888f19350505050158015610219573d6000803e3d6000fd5b5050505050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b600080600080610280856102f8565b92509250925060018684848460405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156102e3573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060008351604114151561030d57600080fd5b5050506020810151604082015160609092015160001a929091905600a165627a7a7230582093dd10a78b17ab9911ae5b6c0f1b72a81bcf763fa2032a5703cb70dfe0dffb590029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000})
txpool.status
miner.start()
miner.stop()
eth.getBlock()
SampleHEX="0x608060405260008054600160a060020a03191633179055610355806100256000396000f30060806040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166341c0e1b58114610050578063a90ae88714610067575b600080fd5b34801561005c57600080fd5b50610065610126565b005b34801561007357600080fd5b506100656004803603606081101561008a57600080fd5b8135916020810135918101906060810160408201356401000000008111156100b157600080fd5b8201836020820111156100c357600080fd5b803590602001918460018302840111640100000000831117156100e557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061014d945050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461014a57600080fd5b33ff5b604080516c0100000000000000000000000033810260208084019190915260348301879052605483018690523091909102607483015282516068818403018152608890920190925280519101206000906101a690610220565b60005490915073ffffffffffffffffffffffffffffffffffffffff166101cc8284610271565b73ffffffffffffffffffffffffffffffffffffffff16146101ec57600080fd5b604051339085156108fc029086906000818181858888f19350505050158015610219573d6000803e3d6000fd5b5050505050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b600080600080610280856102f8565b92509250925060018684848460405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156102e3573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060008351604114151561030d57600080fd5b5050506020810151604082015160609092015160001a929091905600a165627a7a7230582093dd10a78b17ab9911ae5b6c0f1b72a81bcf763fa2032a5703cb70dfe0dffb590029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000})
txpool.status
miner.start()
miner.stop()
eth.getBlock(10)
samplerecpt=eth.getTransactionReceipt("0x3e6752eb48e126fb322fbc71705f592483d2b7b373770cdc157ef8204bf896ea")
samplecontract=sample.at("0x51bc82036c00254057a4b1df949a1bceaf2dc26e")
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
samplecontract.recoverSigner.call(sha3Msg, signedData)
miner.start()
samplecontract.recoverSigner.call(sha3Msg, signedData)
miner.stop()
samplecontract.recoverSigner.call(sha3Msg, signedData)
samplecontract.recoverSigner.sendTransaction(sha3Msg, signedData, {from:eth.accounts[0]})
samplecontract
samplecontract.claimPayment.call(230, 150, signedData)
eth.getBalance(eth.accounts[0])
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
abi=[{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"message","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"}]
sample=eth.contract(abi)
SampleHEX="0x6080604052610242806100136000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461005157806397aba7f914610068575b600080fd5b34801561005d57600080fd5b5061006661011f565b005b34801561007457600080fd5b506100dd6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610138565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff16ff5b600080600080610147856101d9565b925092509250600186848484604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af11580156101c4573d6000803e3d6000fd5b50505060206040510351935050505092915050565b6000806000604184511415156101ee57600080fd5b6020840151915060408401519050606084015160001a925082828292509250925091939092505600a165627a7a72305820e9d91065e34c8e3ce1bb3a6695138ddf36ba610e293c5119aa9af3c842bdc4850029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("samplecontract=sample.at("")")
samplecontract=sample.at("0x59605011785dc8d82dd908451678884f052254a7")
samplecontract.recoverSigner.call(sha3Msg, signedData)
eth.accounts[0]
var sample = eth.contract([{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"message","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"}]);
var verifysignature = verifysignatureContract.new(
   {
     from: web3.eth.accounts[0], 
     data: '0x6080604052610305806100136000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461005157806397aba7f914610068575b600080fd5b34801561005d57600080fd5b5061006661011f565b005b34801561007457600080fd5b506100dd6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610138565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff16ff5b600080600080610147856101e1565b92509250925060016101588761021e565b848484604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af11580156101cc573d6000803e3d6000fd5b50505060206040510351935050505092915050565b6000806000604184511415156101f657600080fd5b6020840151915060408401519050606084015160001a92508282829250925092509193909250565b60008160405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b6020831015156102a55780518252602082019150602081019050602083039250610280565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090509190505600a165627a7a72305820654513dfbb26f0548ead0c4f0f362ba6d93ec97dbe91d47850ced0c81fb83f260029', 
     gas: '4700000'
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
var sample = eth.contract([{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"message","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"}]);
var thesample = sample.new(
   {
     from: web3.eth.accounts[0], 
     data: '0x6080604052610305806100136000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461005157806397aba7f914610068575b600080fd5b34801561005d57600080fd5b5061006661011f565b005b34801561007457600080fd5b506100dd6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610138565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff16ff5b600080600080610147856101e1565b92509250925060016101588761021e565b848484604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af11580156101cc573d6000803e3d6000fd5b50505060206040510351935050505092915050565b6000806000604184511415156101f657600080fd5b6020840151915060408401519050606084015160001a92508282829250925092509193909250565b60008160405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b6020831015156102a55780518252602082019150602081019050602083039250610280565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090509190505600a165627a7a72305820654513dfbb26f0548ead0c4f0f362ba6d93ec97dbe91d47850ced0c81fb83f260029', 
     gas: '4700000'
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xfc16e4bccb4967f50ed3d5edbe4704be36396229")
samplecontract.recoverSigner.call(sha3Msg, signedData)
eth.accounts
abi=[{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"message","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"}]
sample=eth.contract(abi)
SampleHEX="6080604052610231806100136000396000f30060806040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166341c0e1b5811461005057806397aba7f914610067575b600080fd5b34801561005c57600080fd5b5061006561014a565b005b34801561007357600080fd5b506101216004803603604081101561008a57600080fd5b813591908101906040810160208201356401000000008111156100ac57600080fd5b8201836020820111156100be57600080fd5b803590602001918460018302840111640100000000831117156100e057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061014d945050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b33ff5b60008060008061015c856101d4565b925092509250600b8684848460405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156101bf573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411415156101e957600080fd5b5050506020810151604082015160609092015160001a929091905600a165627a7a7230582028e8b7bf80eb9aae7b90f6221e041ebf583bc69785b5b5e3e854f494c4a0e9fb0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()abi=[{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"message","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"}]
sample=eth.contract(abi)
SampleHEX="0x6080604052610231806100136000396000f30060806040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166341c0e1b5811461005057806397aba7f914610067575b600080fd5b34801561005c57600080fd5b5061006561014a565b005b34801561007357600080fd5b506101216004803603604081101561008a57600080fd5b813591908101906040810160208201356401000000008111156100ac57600080fd5b8201836020820111156100be57600080fd5b803590602001918460018302840111640100000000831117156100e057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061014d945050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b33ff5b60008060008061015c856101d4565b925092509250600b8684848460405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156101bf573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411415156101e957600080fd5b5050506020810151604082015160609092015160001a929091905600a165627a7a7230582028e8b7bf80eb9aae7b90f6221e041ebf583bc69785b5b5e3e854f494c4a0e9fb0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x7abe8dda19122b5fa42cb18455a1a53c9eacc1f9")
samplecontract.recoverSigner.call(sha3Msg, signedData)
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
abi=[{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"message","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"}]
sample=eth.contract(abi)
SampleHEX="0x6080604052610231806100136000396000f30060806040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166341c0e1b5811461005057806397aba7f914610067575b600080fd5b34801561005c57600080fd5b5061006561014a565b005b34801561007357600080fd5b506101216004803603604081101561008a57600080fd5b813591908101906040810160208201356401000000008111156100ac57600080fd5b8201836020820111156100be57600080fd5b803590602001918460018302840111640100000000831117156100e057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061014d945050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b33ff5b60008060008061015c856101d4565b925092509250600b8684848460405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156101bf573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411415156101e957600080fd5b5050506020810151604082015160609092015160001a929091905600a165627a7a7230582028e8b7bf80eb9aae7b90f6221e041ebf583bc69785b5b5e3e854f494c4a0e9fb0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xd9b40f71f4fb2ac0ee65ac34ee3a9f45ac55883c")
samplecontract.recoverSigner.call(sha3Msg, signedData)
eth.accounts
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
abi=[{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"message","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"}]
sample=eth.contract(abi)
SampleHEX="0x6080604052610231806100136000396000f30060806040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166341c0e1b5811461005057806397aba7f914610067575b600080fd5b34801561005c57600080fd5b5061006561014a565b005b34801561007357600080fd5b506101216004803603604081101561008a57600080fd5b813591908101906040810160208201356401000000008111156100ac57600080fd5b8201836020820111156100be57600080fd5b803590602001918460018302840111640100000000831117156100e057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061014d945050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b33ff5b60008060008061015c856101d4565b925092509250600b8684848460405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156101bf573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411415156101e957600080fd5b5050506020810151604082015160609092015160001a929091905600a165627a7a7230582028e8b7bf80eb9aae7b90f6221e041ebf583bc69785b5b5e3e854f494c4a0e9fb0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x9e6c4e27e0d2c20cfbbbcc6bf7ce8724752412cb")
samplecontract.recoverSigner.call(sha3Msg, signedData)
eth.getBlock(40)
web3.eth.sha256("123")
web3.sha3(123)
web3.sha3("123")
web3.sha235("123")
eth.getBlock(10)
eth.getTransaction("0x3e6752eb48e126fb322fbc71705f592483d2b7b373770cdc157ef8204bf896ea")
eth.getBlock(1)
eth.getTransaction("0x5645e275a7b78211a83203102a46ac909f28ed6993d5975cef74f62d3ff21607")
eth.sendTransaction({from:eth.accounts[0], to:"0x6044c69f30e5699fe6f0ee4fccbcb50b1ab11fa7",value:web3.toWei(0.05, "ether"), data:"abcdefg"})
eth.accounts
eth.sendTransaction({from:"0x492f3232b3e2affb484ddebd3bc84c091b68626f", to:"0x6044c69f30e5699fe6f0ee4fccbcb50b1ab11fa7",value:web3.toWei(0.05, "ether"), data:"abcdefg"})
eth.sendTransaction({from:"0x492f3232b3e2affb484ddebd3bc84c091b68626f", to:"0x6044c69f30e5699fe6f0ee4fccbcb50b1ab11fa7",value:web3.toWei(0.05, "ether"), data:"0x123456"})
eth.sendTransaction({from:"0x492f3232b3e2affb484ddebd3bc84c091b68626f", to:"0x6044c69f30e5699fe6f0ee4fccbcb50b1ab11fa7",value:web3.toWei(0.05, "ether"), data:456123})
eth.sendTransaction({from:"0x492f3232b3e2affb484ddebd3bc84c091b68626f", to:"0x6044c69f30e5699fe6f0ee4fccbcb50b1ab11fa7",value:web3.toWei(0.05, "ether"), data:"0xadgag"})
eth.sendTransaction({from:"0x492f3232b3e2affb484ddebd3bc84c091b68626f", to:"0x6044c69f30e5699fe6f0ee4fccbcb50b1ab11fa7",value:web3.toWei(0.05, "ether"), data:"0x123456789"})
eth.sendTransaction({from:"0x492f3232b3e2affb484ddebd3bc84c091b68626f", to:"0x6044c69f30e5699fe6f0ee4fccbcb50b1ab11fa7",value:web3.toWei(0.05, "ether"), data:"0x1234567890"})
miner.start()
miner.stop()
eth.getBlock(41)
eth.getTransaction("0x6380736001763e7f2979510cc738511786f57c1294a3848da33984683931357f")
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b5061011c806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b6000600b838360405160008152602001604052604051808360ff1660ff1681526020018260ff1660ff168152602001925050506020604051602081039080840390855afa15801560de573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a72305820ec0eee514cefd07ffb5fa9358453d925d8916aaa45a1aca0ad9bf981d30ef8910029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x9e786481ffe0db2546c374ff2dba7003d6641b57")
samplecontract.ADD.call(a+b)
samplecontract.ADD.call(1,2))
samplecontract.ADD.call(1,2)
samplecontract.ADD.call(1,3)
samplecontract.ADD.call(1,1)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b5061011c806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b6000600b838360405160008152602001604052604051808360ff1660ff1681526020018260ff1660ff168152602001925050506020604051602081039080840390855afa15801560de573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a72305820ec0eee514cefd07ffb5fa9358453d925d8916aaa45a1aca0ad9bf981d30ef8910029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x55ae9e66c9a4f4089433e77d2ba56e22d87ce109")
samplecontract.ADD.call(1,2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b5061011c806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b6000600b838360405160008152602001604052604051808360ff1660ff1681526020018260ff1660ff168152602001925050506020604051602081039080840390855afa15801560de573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a72305820ec0eee514cefd07ffb5fa9358453d925d8916aaa45a1aca0ad9bf981d30ef8910029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x7687ab165ea8c129a439c7a0563ab6ee7bc6452e")
samplecontract.ADD.call(1,2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b5061011c806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b6000600b838360405160008152602001604052604051808360ff1660ff1681526020018260ff1660ff168152602001925050506020604051602081039080840390855afa15801560de573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a72305820ec0eee514cefd07ffb5fa9358453d925d8916aaa45a1aca0ad9bf981d30ef8910029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xad5003101dc4be402cc705496ca9732b96f489e4")
samplecontract.ADD.call(1,2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b5061011c806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b6000600b838360405160008152602001604052604051808360ff1660ff1681526020018260ff1660ff168152602001925050506020604051602081039080840390855afa15801560de573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a72305820ec0eee514cefd07ffb5fa9358453d925d8916aaa45a1aca0ad9bf981d30ef8910029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x6b9095f594e595e665f8131cbeafb18dcfc0b633")
samplecontract.ADD.call(1,2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610115806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b6000600b8383604051808360ff1660ff1681526020018260ff1660ff16815260200192505050602060405180830381855afa15801560cc573d6000803e3d6000fd5b5050506040513d602081101560e057600080fd5b505193925050505600a165627a7a72305820ec0eee514cefd07ffb5fa9358453d925d8916aaa45a1aca0ad9bf981d30ef8910029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x079bf5272ec69aeeb31e2b6cb1ffef3460150189")
samplecontract.ADD.call(1,2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610115806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b6000600b8383604051808360ff1660ff1681526020018260ff1660ff16815260200192505050602060405180830381855afa15801560cc573d6000803e3d6000fd5b5050506040513d602081101560e057600080fd5b505193925050505600a165627a7a72305820ec0eee514cefd07ffb5fa9358453d925d8916aaa45a1aca0ad9bf981d30ef8910029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610115806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b6000600b8383604051808360ff1660ff1681526020018260ff1660ff16815260200192505050602060405180830381855afa15801560cc573d6000803e3d6000fd5b5050506040513d602081101560e057600080fd5b505193925050505600a165627a7a72305820ec0eee514cefd07ffb5fa9358453d925d8916aaa45a1aca0ad9bf981d30ef8910029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610115806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b6000600b8383604051808360ff1660ff1681526020018260ff1660ff16815260200192505050602060405180830381855afa15801560cc573d6000803e3d6000fd5b5050506040513d602081101560e057600080fd5b505193925050505600a165627a7a72305820ec0eee514cefd07ffb5fa9358453d925d8916aaa45a1aca0ad9bf981d30ef8910029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610115806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b6000600b8383604051808360ff1660ff1681526020018260ff1660ff16815260200192505050602060405180830381855afa15801560cc573d6000803e3d6000fd5b5050506040513d602081101560e057600080fd5b505193925050505600a165627a7a72305820ec0eee514cefd07ffb5fa9358453d925d8916aaa45a1aca0ad9bf981d30ef8910029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610115806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b6000600b8383604051808360ff1660ff1681526020018260ff1660ff16815260200192505050602060405180830381855afa15801560cc573d6000803e3d6000fd5b5050506040513d602081101560e057600080fd5b505193925050505600a165627a7a72305820ec0eee514cefd07ffb5fa9358453d925d8916aaa45a1aca0ad9bf981d30ef8910029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610115806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b6000600b8383604051808360ff1660ff1681526020018260ff1660ff16815260200192505050602060405180830381855afa15801560cc573d6000803e3d6000fd5b5050506040513d602081101560e057600080fd5b505193925050505600a165627a7a72305820ec0eee514cefd07ffb5fa9358453d925d8916aaa45a1aca0ad9bf981d30ef8910029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x05bdb31394ca1919dc238027b8e5f19d331412b5")
samplecontract.ADD.call(1,2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610115806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b6000600b8383604051808360ff1660ff1681526020018260ff1660ff16815260200192505050602060405180830381855afa15801560cc573d6000803e3d6000fd5b5050506040513d602081101560e057600080fd5b505193925050505600a165627a7a72305820ec0eee514cefd07ffb5fa9358453d925d8916aaa45a1aca0ad9bf981d30ef8910029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x05a74284d5225f757d14bc89c051dc0781e60b83")
samplecontract.ADD.call(1,2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610115806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b6000600b8383604051808360ff1660ff1681526020018260ff1660ff16815260200192505050602060405180830381855afa15801560cc573d6000803e3d6000fd5b5050506040513d602081101560e057600080fd5b505193925050505600a165627a7a72305820ec0eee514cefd07ffb5fa9358453d925d8916aaa45a1aca0ad9bf981d30ef8910029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x6152d342e2b58efd09f7fa31a838006e42b08a7b")
samplecontract.ADD.call(1,2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610118806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b604080516000808252602080830180855260ff80881690915285168385015292519092600b92606080820193918290030181855afa15801560cf573d6000803e3d6000fd5b5050506040513d602081101560e357600080fd5b505193925050505600a165627a7a723058205befaff5a393c9ec0ee1ac47d8606bd5c5a57b65a8bd128891ed3e7788486c0e0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x78b19be103c89b9cb4cea05b868b3021c1b7cbab")
samplecontract.ADD.call(1,2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610118806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b604080516000808252602080830180855260ff80881690915285168385015292519092600b92606080820193918290030181855afa15801560cf573d6000803e3d6000fd5b5050506040513d602081101560e357600080fd5b505193925050505600a165627a7a723058205befaff5a393c9ec0ee1ac47d8606bd5c5a57b65a8bd128891ed3e7788486c0e0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xe81b9896c52ec85cc544e0776c6f94fcfee0ff58")
samplecontract.ADD.call(1,2)
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
abi=[{"constant":false,"inputs":[{"name":"message","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610145806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663bb3dac728114610045575b600080fd5b34801561005157600080fd5b506100846004803603608081101561006857600080fd5b5060ff81351690602081013590604081013590606001356100ad565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b604080516000808252602080830180855285905260ff88168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa158015610105573d6000803e3d6000fd5b5050604051601f19015196955050505050505600a165627a7a72305820794c15fd6e7b3a3a13ae50958492a0e8bafe01c9937e9dfae787e807be3af7130029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
abi=[{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"message","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"}]
sample=eth.contract(abi)
SampleHEX="0x608060405261028a806100136000396000f30060806040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166341c0e1b5811461005057806397aba7f914610067575b600080fd5b34801561005c57600080fd5b5061006561014a565b005b34801561007357600080fd5b506101216004803603604081101561008a57600080fd5b813591908101906040810160208201356401000000008111156100ac57600080fd5b8201836020820111156100be57600080fd5b803590602001918460018302840111640100000000831117156100e057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061014d945050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b33ff5b60008060008061015c856101dc565b925092509250600161016d8761020d565b84848460405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156101c7573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411415156101f157600080fd5b5050506020810151604082015160609092015160001a92909190565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c9091019091528151910120905600a165627a7a72305820d62d1e9ca8db5e3703147b4982d580dda51a24b8742775c86927779111cc4be00029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xeab580fdc053e7f016c85879c31dbbef8ae3407c")
samplecontract.recoverSigner.call(sha3Msg, signedData)
eth.accounts[0]
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
abi=[{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"message","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"sig","type":"bytes"}],"name":"splitSignature","outputs":[{"name":"v","type":"uint8"},{"name":"r","type":"bytes32"},{"name":"s","type":"bytes32"}],"payable":false,"stateMutability":"pure","type":"function"},{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"}]
sample=eth.contract(abi)
SampleHEX="0x60806040526103b1806100136000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461005c57806397aba7f914610073578063a7bb58031461012a575b600080fd5b34801561006857600080fd5b506100716101cb565b005b34801561007f57600080fd5b506100e86004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506101e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013657600080fd5b50610191600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061028d565b604051808460ff1660ff16815260200183600019166000191681526020018260001916600019168152602001935050505060405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff16ff5b6000806000806101f38561028d565b9250925092506001610204876102ca565b848484604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af1158015610278573d6000803e3d6000fd5b50505060206040510351935050505092915050565b6000806000604184511415156102a257600080fd5b6020840151915060408401519050606084015160001a92508282829250925092509193909250565b60008160405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083101515610351578051825260208201915060208101905060208303925061032c565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090509190505600a165627a7a723058203974bf0968b42e449f7e284a36e2eaab5b69a702c0a68165d7e1a84a448c818e0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("")sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
abi=[{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"message","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"sig","type":"bytes"}],"name":"splitSignature","outputs":[{"name":"v","type":"uint8"},{"name":"r","type":"bytes32"},{"name":"s","type":"bytes32"}],"payable":false,"stateMutability":"pure","type":"function"},{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"}]
sample=eth.contract(abi)
SampleHEX="0x60806040526103b1806100136000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461005c57806397aba7f914610073578063a7bb58031461012a575b600080fd5b34801561006857600080fd5b506100716101cb565b005b34801561007f57600080fd5b506100e86004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506101e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013657600080fd5b50610191600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061028d565b604051808460ff1660ff16815260200183600019166000191681526020018260001916600019168152602001935050505060405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff16ff5b6000806000806101f38561028d565b9250925092506001610204876102ca565b848484604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af1158015610278573d6000803e3d6000fd5b50505060206040510351935050505092915050565b6000806000604184511415156102a257600080fd5b6020840151915060408401519050606084015160001a92508282829250925092509193909250565b60008160405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083101515610351578051825260208201915060208101905060208303925061032c565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090509190505600a165627a7a723058203974bf0968b42e449f7e284a36e2eaab5b69a702c0a68165d7e1a84a448c818e0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
abi=[{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"message","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"sig","type":"bytes"}],"name":"splitSignature","outputs":[{"name":"v","type":"uint8"},{"name":"r","type":"bytes32"},{"name":"s","type":"bytes32"}],"payable":false,"stateMutability":"pure","type":"function"},{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"}]
sample=eth.contract(abi)
SampleHEX="0x60806040526103b1806100136000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461005c57806397aba7f914610073578063a7bb58031461012a575b600080fd5b34801561006857600080fd5b506100716101cb565b005b34801561007f57600080fd5b506100e86004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506101e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013657600080fd5b50610191600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061028d565b604051808460ff1660ff16815260200183600019166000191681526020018260001916600019168152602001935050505060405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff16ff5b6000806000806101f38561028d565b9250925092506001610204876102ca565b848484604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af1158015610278573d6000803e3d6000fd5b50505060206040510351935050505092915050565b6000806000604184511415156102a257600080fd5b6020840151915060408401519050606084015160001a92508282829250925092509193909250565b60008160405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083101515610351578051825260208201915060208101905060208303925061032c565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090509190505600a165627a7a723058203974bf0968b42e449f7e284a36e2eaab5b69a702c0a68165d7e1a84a448c818e0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x06c87c20971607c2e7d0a8e7915571149c560687")
samplecontract.splitSignature.call(signedData)
vVar = 27
rVar = "0xd34e2e413bb1776b46d422ba87d7ea9e848eef2889b060bbef941a2b8bedea70"
SVar = "0x0245b0c61150cb7ae40b6b206896bc15879a873570eabfa763860728a73ff14d"
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
vVar = 27
rVar = "0xd34e2e413bb1776b46d422ba87d7ea9e848eef2889b060bbef941a2b8bedea70"
SVar = "0x0245b0c61150cb7ae40b6b206896bc15879a873570eabfa763860728a73ff14d"
abi=[{"constant":false,"inputs":[{"name":"v","type":"uint8"},{"name":"r","type":"bytes32"},{"name":"s","type":"bytes32"},{"name":"message","type":"bytes32"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b5061024a806100206000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063bb3dac7214610046575b600080fd5b34801561005257600080fd5b5061009e600480360381019080803560ff1690602001909291908035600019169060200190929190803560001916906020019092919080356000191690602001909291905050506100e0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600060018260405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b6020831015156101695780518252602082019150602081019050602083039250610144565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020868686604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af115801561020a573d6000803e3d6000fd5b5050506020604051035190509493505050505600a165627a7a7230582003e0c4b5bcfd8c5bf4ee0b656cd6227c17288866b2d4331a1a44b62e1244bbd70029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x7571474792c45462863670faaa47ddef3e996aa0")
samplecontract.recoverSigner.call(vVar, rVar, sVar, sha3Msg)
samplecontract.recoverSigner.call(vVar, rVar, SVar, sha3Msg)
eth.accounts
abi=[{"constant":false,"inputs":[{"name":"v","type":"uint8"},{"name":"r","type":"bytes32"},{"name":"s","type":"bytes32"},{"name":"message","type":"bytes32"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b5061018f806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663bb3dac728114610045575b600080fd5b34801561005157600080fd5b506100846004803603608081101561006857600080fd5b5060ff81351690602081013590604081013590606001356100ad565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c80830185905283518084039091018152605c8301808552815191830191909120600091829052607c84018086525260ff8816609c84015260bc830187905260dc8301869052925160019260fc8082019392601f1981019281900390910190855afa15801561014f573d6000803e3d6000fd5b5050604051601f19015196955050505050505600a165627a7a7230582040c7402cbc5eef62fcf80c533e98ae6b1999e229e8d22a4bf7af01d24a08f3400029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
abi=[{"constant":false,"inputs":[{"name":"v","type":"uint8"},{"name":"r","type":"bytes32"},{"name":"s","type":"bytes32"},{"name":"message","type":"bytes32"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b5061018f806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663bb3dac728114610045575b600080fd5b34801561005157600080fd5b506100846004803603608081101561006857600080fd5b5060ff81351690602081013590604081013590606001356100ad565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c80830185905283518084039091018152605c8301808552815191830191909120600091829052607c84018086525260ff8816609c84015260bc830187905260dc8301869052925160019260fc8082019392601f1981019281900390910190855afa15801561014f573d6000803e3d6000fd5b5050604051601f19015196955050505050505600a165627a7a7230582040c7402cbc5eef62fcf80c533e98ae6b1999e229e8d22a4bf7af01d24a08f3400029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
abi=[{"constant":false,"inputs":[{"name":"v","type":"uint8"},{"name":"r","type":"bytes32"},{"name":"s","type":"bytes32"},{"name":"message","type":"bytes32"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b5061018f806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663bb3dac728114610045575b600080fd5b34801561005157600080fd5b506100846004803603608081101561006857600080fd5b5060ff81351690602081013590604081013590606001356100ad565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c80830185905283518084039091018152605c8301808552815191830191909120600091829052607c84018086525260ff8816609c84015260bc830187905260dc8301869052925160019260fc8082019392601f1981019281900390910190855afa15801561014f573d6000803e3d6000fd5b5050604051601f19015196955050505050505600a165627a7a7230582040c7402cbc5eef62fcf80c533e98ae6b1999e229e8d22a4bf7af01d24a08f3400029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
abi=[{"constant":false,"inputs":[{"name":"v","type":"uint8"},{"name":"r","type":"bytes32"},{"name":"s","type":"bytes32"},{"name":"message","type":"bytes32"}],"name":"recoverSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b5061018f806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663bb3dac728114610045575b600080fd5b34801561005157600080fd5b506100846004803603608081101561006857600080fd5b5060ff81351690602081013590604081013590606001356100ad565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c80830185905283518084039091018152605c8301808552815191830191909120600091829052607c84018086525260ff8816609c84015260bc830187905260dc8301869052925160019260fc8082019392601f1981019281900390910190855afa15801561014f573d6000803e3d6000fd5b5050604051601f19015196955050505050505600a165627a7a7230582040c7402cbc5eef62fcf80c533e98ae6b1999e229e8d22a4bf7af01d24a08f3400029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xf5981888d886cbecefdb7ff35749892894686c39")
samplecontract.recoverSigner.call(vVar, rVar, sVar, sha3Msg)
samplecontract.recoverSigner.call(vVar, rVar, SVar, sha3Msg)
vVar
rVar
SVar
sha3Msg
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b5061011c806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b6000600b838360405160008152602001604052604051808360ff1660ff1681526020018260ff1660ff168152602001925050506020604051602081039080840390855afa15801560de573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a72305820e51175043c2d82ca0982f0eed61489affdb991b04fe05f1c4f9f511792c5bbc00029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x48ff451780286c7190c0c3d7085dd7320bcbf239")
samplecontract.ADD.call(1, 2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610124806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b604080516000808252602080830180855260ff8088169182905286168486018190526060850191909152608084015292519092600b9260a080820193601f1981019281900390910190855afa15801560e6573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a7230582052a27239d9839f5696a6475c1b48d5575ad15a8b454f2919c7c10ec6e6c6d5b30029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xe91d05bfda8c631d3566a3d2603ed8f05a1bbd44")
samplecontract.ADD.call(1, 2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes32"},{"name":"b","type":"bytes32"}],"name":"ADD","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610117806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663193fe96f81146043575b600080fd5b348015604e57600080fd5b50606f60048036036040811015606357600080fd5b50803590602001356081565b60408051918252519081900360200190f35b6000600b8383858560405160008152602001604052604051808581526020018481526020018381526020018281526020019450505050506020604051602081039080840390855afa15801560d9573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a7230582048fd8c8a60cc2ee6118ea5663090c71a42848e8ca9dbd71165fa89ffff638fcd0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xae4256014a290857a84e33fe47677eb018184522")
samplecontract.ADD.call(1, 2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes32"},{"name":"b","type":"bytes32"}],"name":"ADD","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610117806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663193fe96f81146043575b600080fd5b348015604e57600080fd5b50606f60048036036040811015606357600080fd5b50803590602001356081565b60408051918252519081900360200190f35b6000600b8383858560405160008152602001604052604051808581526020018481526020018381526020018281526020019450505050506020604051602081039080840390855afa15801560d9573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a7230582048fd8c8a60cc2ee6118ea5663090c71a42848e8ca9dbd71165fa89ffff638fcd0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x392c6dd7249650c01ddc075687f784d310c8ced5")
samplecontract.ADD.call(1, 2)
aVar = 1
bVar = 2
samplecontract.ADD.call(aVar, bVar)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610120806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff813581169160200135166086565b60408051918252519081900360200190f35b604080516000808252602080830180855260ff8088169182905286168486018190526060850191909152608084015292519092600b9260a080820193601f1981019281900390910190855afa15801560e2573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a72305820f90136120a6fdb5e81f763b3d41a8e5d4b3e658251a1377b5aa461ea3ffa38cb0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x786cace6bc310996bae3ad787c873023d2155374")
samplecontract.ADD.call(1, 2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint256"},{"name":"b","type":"uint256"}],"name":"ADD","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610117806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663a87de9cc81146043575b600080fd5b348015604e57600080fd5b50606f60048036036040811015606357600080fd5b50803590602001356081565b60408051918252519081900360200190f35b6000600b8383858560405160008152602001604052604051808581526020018481526020018381526020018281526020019450505050506020604051602081039080840390855afa15801560d9573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a723058204d928e2607bfb99a12b11aa5ce912fb41fbc1243194bdc319e257e6b2274c1650029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xe19f9a63ce79b9411e6997c3255b3eca0c2e0584")
samplecontract.ADD.call(1, 2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint256"},{"name":"b","type":"uint256"}],"name":"ADD","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
samplecontract=sample.at("0xe19f9a63ce79b9411e6997c3255b3eca0c2e0584")
sample=eth.contract(abi)
samplecontract=sample.at("0xe19f9a63ce79b9411e6997c3255b3eca0c2e0584")
samplecontract.ADD.call(1, 2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint256"},{"name":"b","type":"uint256"}],"name":"ADD","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610107806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663a87de9cc81146043575b600080fd5b348015604e57600080fd5b50606f60048036036040811015606357600080fd5b50803590602001356081565b60408051918252519081900360200190f35b6000600b83836040516000815260200160405260405180838152602001828152602001925050506020604051602081039080840390855afa15801560c9573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a72305820665a2512829b62c5cfea44f82863f34d7f348b56b198b7d85a51ec0099ef6f1e0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xaa31d560f48173f04c835f56673b33abdf532d6e")
samplecontract.ADD.call(1, 2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610118806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff813581169160200135166086565b60408051918252519081900360200190f35b6000600b838360405160008152602001604052604051808360ff1660ff1681526020018260ff1660ff168152602001925050506020604051602081039080840390855afa15801560da573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a72305820a1527109f9710e99263a8f8ca127d18a6f88d92780d46abe344305b98bc2e78c0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x4fea3fb5dd01b9f5bd56da21d35bc259a220a7c3")
samplecontract.ADD.call(1, 2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b5061011c806100206000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b6000600b838360405160008152602001604052604051808360ff1660ff1681526020018260ff1660ff168152602001925050506020604051602081039080840390855afa15801560de573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a72305820937ec7aeb9b05b41ebe1f28048438f7cfa077fc235a187b9928ab99b084eed8d0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xea728105178d7ffa72c7e48a62820688a2086bb5")
samplecontract.ADD.call(1, 2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
samplecontract=sample.at("0xea728105178d7ffa72c7e48a62820688a2086bb5")
samplecontract.ADD.call(1, 2)
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"},{"name":"b","type":"bytes"}],"name":"stcConnect","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b5061029f806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b83875458114610045575b600080fd5b34801561005157600080fd5b5061017f6004803603604081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561010a57600080fd5b82018360208201111561011c57600080fd5b8035906020019184600183028401116401000000008311171561013e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610195945050505050565b6040805160ff9092168252519081900360200190f35b6000600f83836040518083805190602001908083835b602083106101ca5780518252601f1990920191602091820191016101ab565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106102125780518252601f1990920191602091820191016101f3565b6001836020036101000a03801982511681845116808217855250505050505090500192505050602060405180830381855afa158015610255573d6000803e3d6000fd5b5050506040513d602081101561026a57600080fd5b505193925050505600a165627a7a72305820937520c2165e3283d8418f220cea55521d8ab22d6591f41afc116f8ee96408cc0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x4b66f3ae5801dff4b521fae3d9e67e80efe47a11")
samplecontract.stcConnect.call("1234568790", "1234567890")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"}],"name":"strSha256","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101c6806100206000396000f3006080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166360bd26ec8114610045575b600080fd5b34801561005157600080fd5b506100f86004803603602081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061010a945050505050565b60408051918252519081900360200190f35b60006002826040518082805190602001908083835b6020831061013e5780518252601f19909201916020918201910161011f565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa15801561017d573d6000803e3d6000fd5b5050506040513d602081101561019257600080fd5b5051929150505600a165627a7a72305820d2ce1e461c4a34720ce5b9fab6e7112ccc72562c9db0ea4d56b1d3b8932cc2340029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xd761b8294d73491c341b72892c9bdb0c3d3d1ebc")
samplecontract.strSha256.call("1234568790")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"}],"name":"stcConnect","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101ca806100206000396000f3006080604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631356cca78114610045575b600080fd5b34801561005157600080fd5b506100f86004803603602081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061010e945050505050565b6040805160ff9092168252519081900360200190f35b6000600f826040518082805190602001908083835b602083106101425780518252601f199092019160209182019101610123565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa158015610181573d6000803e3d6000fd5b5050506040513d602081101561019657600080fd5b5051929150505600a165627a7a72305820a9e1992670978f650c083aab84dd5c0f2827f1da9dab94cb4a442c2bd18c98450029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x2884db09df630ce49bbdc2642dba5854464a44dc")
samplecontract.stcConnect.call("12345687901234567890")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"}],"name":"stcConnect","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101c6806100206000396000f3006080604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631356cca78114610045575b600080fd5b34801561005157600080fd5b506100f86004803603602081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061010a945050505050565b60408051918252519081900360200190f35b6000600f826040518082805190602001908083835b6020831061013e5780518252601f19909201916020918201910161011f565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa15801561017d573d6000803e3d6000fd5b5050506040513d602081101561019257600080fd5b5051929150505600a165627a7a72305820d6fab07a3b88672002d3f89133f383f2bdb52f18958f47517133383ad37017760029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x79bd3becc28fbdf95ed73a3b376966c27eff1b8d")
samplecontract.stcConnect.call("12345687901234567890")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"}],"name":"stcConnect","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101c6806100206000396000f3006080604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631356cca78114610045575b600080fd5b34801561005157600080fd5b506100f86004803603602081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061010a945050505050565b60408051918252519081900360200190f35b6000600f826040518082805190602001908083835b6020831061013e5780518252601f19909201916020918201910161011f565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa15801561017d573d6000803e3d6000fd5b5050506040513d602081101561019257600080fd5b5051929150505600a165627a7a72305820d6fab07a3b88672002d3f89133f383f2bdb52f18958f47517133383ad37017760029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xab51e6070aab862e9d26e291a7729d0bc3bddf70")
samplecontract.stcConnect.call("12345687901234567890")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"}],"name":"solTest","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610147806100206000396000f3006080604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631356cca78114610045575b600080fd5b34801561005157600080fd5b506100f86004803603602081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061010a945050505050565b60408051918252519081900360200190f35b60006101158261010a565b929150505600a165627a7a7230582019e23cf63db0a4232d91d8590a661228c46935844d9620338ee8c6e9bf3d1a660029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x3151cc28e767116864f098807500a6d72ba8e708")
samplecontract.solTest.call("12345687901234567890")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"}],"name":"solTest","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610147806100206000396000f3006080604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631356cca78114610045575b600080fd5b34801561005157600080fd5b506100f86004803603602081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061010a945050505050565b60408051918252519081900360200190f35b60006101158261010a565b929150505600a165627a7a7230582019e23cf63db0a4232d91d8590a661228c46935844d9620338ee8c6e9bf3d1a660029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x189adb7c0d74c6e3d4ee5acb5f756b8a91dc79c2")
samplecontract.solTest.call("12345687901234567890")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"}],"name":"solTest","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b50610147806100206000396000f3006080604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631356cca78114610045575b600080fd5b34801561005157600080fd5b506100f86004803603602081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061010a945050505050565b60408051918252519081900360200190f35b60006101158261010a565b929150505600a165627a7a7230582019e23cf63db0a4232d91d8590a661228c46935844d9620338ee8c6e9bf3d1a660029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x7a8ed3764495dc06edd3eb6a8a29da09b5f4454d")
samplecontract.solTest.call("12345687901234567890")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"}],"name":"solTest","outputs":[{"name":"","type":"bytes20"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101d5806100206000396000f3006080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166337435fa98114610045575b600080fd5b34801561005157600080fd5b506100f86004803603602081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061011a945050505050565b604080516bffffffffffffffffffffffff199092168252519081900360200190f35b60006003826040518082805190602001908083835b6020831061014e5780518252601f19909201916020918201910161012f565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa15801561018d573d6000803e3d6000fd5b5050604051516c010000000000000000000000000293925050505600a165627a7a72305820187607b8ae2c70d354309e309d0a56562d3582bb7199419b0fd697474b83e7b00029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x0f5a0ecc5f7ba0a009cfbde89e6e3b0d9c838f8b")
samplecontract.solTest.call("12345687901234567890")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"}],"name":"solTest","outputs":[{"name":"","type":"bytes20"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
samplecontract=sample.at("0x0f5a0ecc5f7ba0a009cfbde89e6e3b0d9c838f8b")
samplecontract.solTest.call("12345687901234567890")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"}],"name":"solTest","outputs":[{"name":"","type":"bytes20"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101d5806100206000396000f3006080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166337435fa98114610045575b600080fd5b34801561005157600080fd5b506100f86004803603602081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061011a945050505050565b604080516bffffffffffffffffffffffff199092168252519081900360200190f35b60006003826040518082805190602001908083835b6020831061014e5780518252601f19909201916020918201910161012f565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa15801561018d573d6000803e3d6000fd5b5050604051516c010000000000000000000000000293925050505600a165627a7a72305820187607b8ae2c70d354309e309d0a56562d3582bb7199419b0fd697474b83e7b00029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x764c06c799fcd40d36beff9fe53e66fb1a6db4e1")
samplecontract.solTest.call("12345687901234567890")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"}],"name":"solTest","outputs":[{"name":"","type":"bytes20"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101c6806100206000396000f3006080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166337435fa98114610045575b600080fd5b34801561005157600080fd5b506100f86004803603602081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061011a945050505050565b604080516bffffffffffffffffffffffff199092168252519081900360200190f35b6000600c826040518082805190602001908083835b6020831061014e5780518252601f19909201916020918201910161012f565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa15801561018d573d6000803e3d6000fd5b50506040515193925050505600a165627a7a72305820a4f465965356d8c75de4941dd8990ab93a4de038486d2fd9ae470a6f303da1ad0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xcc81ccbfefb8df70d40f59335a345196befea0ea")
samplecontract.solTest.call("12345687901234567890")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"}],"name":"solTest","outputs":[{"name":"","type":"bytes20"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101d5806100206000396000f3006080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166337435fa98114610045575b600080fd5b34801561005157600080fd5b506100f86004803603602081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061011a945050505050565b604080516bffffffffffffffffffffffff199092168252519081900360200190f35b6000600d826040518082805190602001908083835b6020831061014e5780518252601f19909201916020918201910161012f565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa15801561018d573d6000803e3d6000fd5b5050604051516c010000000000000000000000000293925050505600a165627a7a72305820fd8babb446b9ba0bf15abd8fd1c7ac5386d1c71d3de2f4a54e9e3d596802980b0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x0fe84c9ca4273490e8dce96c3539ce11170d1376")
samplecontract.solTest.call("12345687901234567890")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"}],"name":"solTest","outputs":[{"name":"","type":"bytes20"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101d5806100206000396000f3006080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166337435fa98114610045575b600080fd5b34801561005157600080fd5b506100f86004803603602081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061011a945050505050565b604080516bffffffffffffffffffffffff199092168252519081900360200190f35b60006003826040518082805190602001908083835b6020831061014e5780518252601f19909201916020918201910161012f565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa15801561018d573d6000803e3d6000fd5b5050604051516c010000000000000000000000000293925050505600a165627a7a72305820a4f465965356d8c75de4941dd8990ab93a4de038486d2fd9ae470a6f303da1ad0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xf6ae39ac38035c030862d2b5428cae82b40ef437")
samplecontract.solTest.call("12345687901234567890")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"}],"name":"solTest","outputs":[{"name":"","type":"bytes20"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101c6806100206000396000f3006080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166337435fa98114610045575b600080fd5b34801561005157600080fd5b506100f86004803603602081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061010a945050505050565b60408051918252519081900360200190f35b6000600c826040518082805190602001908083835b6020831061013e5780518252601f19909201916020918201910161011f565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa15801561017d573d6000803e3d6000fd5b5050506040513d602081101561019257600080fd5b5051929150505600a165627a7a7230582045c148810a764ce797f73b0089f13ded5643a14d72b2e2486c352915321769cc0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xb450c2bbfb8a4923a9a6471a31700652d099e32f")
samplecontract.solTest.call("12345687901234567890")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"}],"name":"solTest","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101c6806100206000396000f3006080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166337435fa98114610045575b600080fd5b34801561005157600080fd5b506100f86004803603602081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061010a945050505050565b60408051918252519081900360200190f35b6000600c826040518082805190602001908083835b6020831061013e5780518252601f19909201916020918201910161011f565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa15801561017d573d6000803e3d6000fd5b5050506040513d602081101561019257600080fd5b5051929150505600a165627a7a7230582045c148810a764ce797f73b0089f13ded5643a14d72b2e2486c352915321769cc0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x819f785ebecca88c5c02de7dddf030059f97b053")
samplecontract.solTest.call("12345687901234567890")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"}],"name":"solTest","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101c6806100206000396000f3006080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166337435fa98114610045575b600080fd5b34801561005157600080fd5b506100f86004803603602081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061010a945050505050565b60408051918252519081900360200190f35b6000600c826040518082805190602001908083835b6020831061013e5780518252601f19909201916020918201910161011f565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa15801561017d573d6000803e3d6000fd5b5050506040513d602081101561019257600080fd5b5051929150505600a165627a7a72305820691b4afafde2cf589b67c60832d815ff9264e2322ebefa8b50734cdeaefdd66f0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xc31908b1822c04963271f3c0179ac77a974f65d8")
samplecontract.solTest.call("12345687901234567890")
samplecontract.solTest.call("ff")
samplecontract.solTest.call("ab")
samplecontract.solTest.call("12")
samplecontract.solTest.call("123")
samplecontract.solTest.call("12")
samplecontract.solTest.call("10")
samplecontract.solTest.call("1")
samplecontract.solTest.call("1234")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"}],"name":"solTest","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
samplecontract=sample.at("0xc31908b1822c04963271f3c0179ac77a974f65d8")
samplecontract.solTest.call("1234")
samplecontract.solTest.call("1")
samplecontract.solTest.call("12")
samplecontract.solTest.call("123")
samplecontract.solTest.call("1234")
samplecontract.solTest.call("12345")
samplecontract.solTest.call(123456)
samplecontract.solTest.call(1)
samplecontract.solTest.call(9)
samplecontract.solTest.call(12)
samplecontract.solTest.call(123)
samplecontract.solTest.call(1234)
samplecontract.solTest.call(1235)
samplecontract.solTest.call(1236)
samplecontract.solTest.call(1240)
samplecontract.solTest.call("123")
samplecontract.solTest.call(123)
samplecontract.solTest.call("1234")
samplecontract.solTest.call("1279")
samplecontract.solTest.call("1246")
samplecontract.solTest.call("ff")
samplecontract.solTest.call("aa")
samplecontract.solTest.call("a1")
samplecontract.solTest.call("1a")
samplecontract.solTest.call("11")
samplecontract.solTest.call("1 1")
samplecontract.solTest.call("21")
samplecontract.solTest.call("20")
samplecontract.solTest.call("29")
samplecontract.solTest.call("29564")
samplecontract.solTest.call("2956")
samplecontract.solTest.call("29563")
samplecontract.solTest.call("129563")
samplecontract.solTest.call("17")
samplecontract.solTest.call("16")
samplecontract.solTest.call("15")
abi=[{"constant":false,"inputs":[{"name":"a","type":"bytes"},{"name":"a","type":"bytes"}],"name":"solTest","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b5061029b806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663a1d9ea598114610045575b600080fd5b34801561005157600080fd5b5061017f6004803603604081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561010a57600080fd5b82018360208201111561011c57600080fd5b8035906020019184600183028401116401000000008311171561013e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610191945050505050565b60408051918252519081900360200190f35b6000600c83836040518083805190602001908083835b602083106101c65780518252601f1990920191602091820191016101a7565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b6020831061020e5780518252601f1990920191602091820191016101ef565b6001836020036101000a03801982511681845116808217855250505050505090500192505050602060405180830381855afa158015610251573d6000803e3d6000fd5b5050506040513d602081101561026657600080fd5b505193925050505600a165627a7a72305820d6b16a1acab8bd6ce94b2a56261ec7ace2e3b11f4ac3fc9586cf0200dbfe67250029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x89545a5365d5d2ced2f3fe19d71af8d7e5f805b3")
samplecontract.solTest.call(abcd, abcd)
samplecontract.solTest.call("abcd", "abcd")
samplecontract.solTest.call("1a", "abcd")
samplecontract.solTest.call("abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef12","abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef12")
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"sig","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506102c1806100206000396000f3006080604052600536106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b25721c58114610045575b600080fd5b34801561005157600080fd5b5061018a600480360360a081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561010a57600080fd5b82018360208201111561011c57600080fd5b8035906020019184600183028401116401000000008311171561013e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550508235935050506020810135906040013561019c565b60408051918252519081900360200190f35b6000600c86868686866040518086805190602001908083835b602083106101d45780518252601f1990920191602091820191016101b5565b51815160209384036101000a600019018019909216911617905288519190930192880191508083835b6020831061021c5780518252601f1990920191602091820191016101fd565b6001836020036101000a03801982511681845116808217855250505050505090500184815260200183815260200182815260200195505050505050602060405180830381855afa158015610274573d6000803e3d6000fd5b5050506040513d602081101561028957600080fd5b505196955050505050505600a165627a7a723058200363b1d33828fc1f7964eff074500ecb8c0d9b32576d3ea7caa469062f1293760029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x2fd56b7a2525f22ba6180f652eecd1b163ec6fa9")
samplecontract.verifyProof.call("abcd", "abcd", "0xabcd", "0xabcd", 5300)
proof = "abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef12"
sig = "0xd34e2e413bb1776b46d422ba87d7ea9e848eef2889b060bbef941a2b8bedea700245b0c61150cb7ae40b6b206896bc15879a873570eabfa763860728a73ff14d1b"
hashData = "0x7ee156df5091fbef71b96557542210a9c9ca851cc85aaf60026519b4aaccf491"
hashCoeff = "0x0245b0c61150cb7ae40b6b206896bc15879a873570eabfa763860728a73ff14d"
premium = 5300
samplecontract.solTest.call(proof, sig, hashData, hashCoeff, premium)
samplecontract.verifyProof.call(proof, sig, hashData, hashCoeff, premium)
abi=[{"constant":false,"inputs":[{"name":"a","type":"uint8"},{"name":"b","type":"uint8"}],"name":"ADD","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b5061011c806100206000396000f300608060405260053610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e2e7004281146043575b600080fd5b348015604e57600080fd5b50607460048036036040811015606357600080fd5b5060ff81358116916020013516608a565b6040805160ff9092168252519081900360200190f35b6000600b838360405160008152602001604052604051808360ff1660ff1681526020018260ff1660ff168152602001925050506020604051602081039080840390855afa15801560de573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a723058200ec872e84ef1be779564360fec7f95619f4746e17b3b16ed03784f535df591a70029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xaef35ab9667b72b2fe370f681eb433d167efec53")
samplecontract.ADD.call(1, 2)
samplecontract.ADD.call(10, 02)
samplecontract.ADD.call(10, 256)
samplecontract.ADD.call(10, 20)
eth.blockNumber
hashData = "0x7ee156df5091fbef71b96557542210a9c9ca851cc85aaf60026519b4aaccf491"
hashCoeff = "0x0245b0c61150cb7ae40b6b206896bc15879a873570eabfa763860728a73ff14d"
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(hashData, tupleData, hashCoeff, dataCoeff)
hashData = "0x7ee156df5091fbef71b96557542210a9c9ca851cc85aaf60026519b4aaccf491"
hashCoeff = "0x0245b0c61150cb7ae40b6b206896bc15879a873570eabfa763860728a73ff14d"
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(hashData, tupleData, hashCoeff, dataCoeff)
admin.genProof(tupleData, tupleData, dataCoeff, dataCoeff)
admin.genProof(hashData, hashData, hashCoeff, hashCoeff)
hashData = "0x7ee156df5091fbef71b96557542210a9c9ca851cc85aaf60026519b4aaccf491"
hashCoeff = "0x0245b0c61150cb7ae40b6b206896bc15879a873570eabfa763860728a73ff14d"
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(hashData, tupleData, hashCoeff, dataCoeff)
hashData = "0x7ee156df5091fbef71b96557542210a9c9ca851cc85aaf60026519b4aaccf491"
hashCoeff = "0x0245b0c61150cb7ae40b6b206896bc15879a873570eabfa763860728a73ff14d"
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(hashData, tupleData, hashCoeff, dataCoeff)
web3.sha3
web3.sha256
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506102ac806100206000396000f30060806040526004361061004b5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b792d7678114610050578063e2e7004214610120575b600080fd5b34801561005c57600080fd5b5061010e6004803603608081101561007357600080fd5b81019060208101813564010000000081111561008e57600080fd5b8201836020820111156100a057600080fd5b803590602001918460018302840111640100000000831117156100c257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550508235935050506020810135906040013561016b565b60408051918252519081900360200190f35b34801561012c57600080fd5b506101556004803603604081101561014357600080fd5b5060ff81358116916020013516610219565b6040805160ff9092168252519081900360200190f35b6000600c858585856040518085805190602001908083835b602083106101a25780518252601f199092019160209182019101610183565b6001836020036101000a038019825116818451168082178552505050505050905001848152602001838152602001828152602001945050505050602060405180830381855afa1580156101f9573d6000803e3d6000fd5b5050506040513d602081101561020e57600080fd5b505195945050505050565b6000600b838360405160008152602001604052604051808360ff1660ff1681526020018260ff1660ff168152602001925050506020604051602081039080840390855afa15801561026e573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a72305820511319dea79a3768182362ebd819025c9ff0e930c5ebd3b544175480b9fb12110029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xa97c3c23c783c349e7e48c428182385289a5df40")
samplecontract.verifyProof.call("abcd", "0xabcd", "0xabcd", 5300)
proof = "abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef12"
hashData = "0x7ee156df5091fbef71b96557542210a9c9ca851cc85aaf60026519b4aaccf491"
hashCoeff = "0x0245b0c61150cb7ae40b6b206896bc15879a873570eabfa763860728a73ff14d"
premium = 5300
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506102ac806100206000396000f30060806040526004361061004b5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b792d7678114610050578063e2e7004214610120575b600080fd5b34801561005c57600080fd5b5061010e6004803603608081101561007357600080fd5b81019060208101813564010000000081111561008e57600080fd5b8201836020820111156100a057600080fd5b803590602001918460018302840111640100000000831117156100c257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550508235935050506020810135906040013561016b565b60408051918252519081900360200190f35b34801561012c57600080fd5b506101556004803603604081101561014357600080fd5b5060ff81358116916020013516610219565b6040805160ff9092168252519081900360200190f35b6000600c858585856040518085805190602001908083835b602083106101a25780518252601f199092019160209182019101610183565b6001836020036101000a038019825116818451168082178552505050505050905001848152602001838152602001828152602001945050505050602060405180830381855afa1580156101f9573d6000803e3d6000fd5b5050506040513d602081101561020e57600080fd5b505195945050505050565b6000600b838360405160008152602001604052604051808360ff1660ff1681526020018260ff1660ff168152602001925050506020604051602081039080840390855afa15801561026e573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a72305820511319dea79a3768182362ebd819025c9ff0e930c5ebd3b544175480b9fb12110029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x698e097bdf62593622ace7cd3a2755fc22450465")
samplecontract.verifyProof.call("abcd", "0xabcd", "0xabcd", 5300)
proof = "abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef12"
hashData = "0x7ee156df5091fbef71b96557542210a9c9ca851cc85aaf60026519b4aaccf491"
hashCoeff = "0x0245b0c61150cb7ae40b6b206896bc15879a873570eabfa763860728a73ff14d"
premium = 5300
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506102ac806100206000396000f30060806040526004361061004b5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b792d7678114610050578063e2e7004214610120575b600080fd5b34801561005c57600080fd5b5061010e6004803603608081101561007357600080fd5b81019060208101813564010000000081111561008e57600080fd5b8201836020820111156100a057600080fd5b803590602001918460018302840111640100000000831117156100c257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550508235935050506020810135906040013561016b565b60408051918252519081900360200190f35b34801561012c57600080fd5b506101556004803603604081101561014357600080fd5b5060ff81358116916020013516610219565b6040805160ff9092168252519081900360200190f35b6000600c858585856040518085805190602001908083835b602083106101a25780518252601f199092019160209182019101610183565b6001836020036101000a038019825116818451168082178552505050505050905001848152602001838152602001828152602001945050505050602060405180830381855afa1580156101f9573d6000803e3d6000fd5b5050506040513d602081101561020e57600080fd5b505195945050505050565b6000600b838360405160008152602001604052604051808360ff1660ff1681526020018260ff1660ff168152602001925050506020604051602081039080840390855afa15801561026e573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a72305820511319dea79a3768182362ebd819025c9ff0e930c5ebd3b544175480b9fb12110029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x24982f9b8794793a3570f733348abb3bbb539759")
proof = "abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef12"
hashData = "0x7ee156df5091fbef71b96557542210a9c9ca851cc85aaf60026519b4aaccf491"
hashCoeff = "0x0245b0c61150cb7ae40b6b206896bc15879a873570eabfa763860728a73ff14d"
premium = 5300
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
samplecontract.verifyProof.call("abcd", "0xabcd", "0xabcd", 5300)
samplecontract=sample.at("0x698e097bdf62593622ace7cd3a2755fc22450465")
samplecontract.verifyProof.call("abcd", "0xabcd", "0xabcd", 5300)
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506102ac806100206000396000f30060806040526004361061004b5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b792d7678114610050578063e2e7004214610120575b600080fd5b34801561005c57600080fd5b5061010e6004803603608081101561007357600080fd5b81019060208101813564010000000081111561008e57600080fd5b8201836020820111156100a057600080fd5b803590602001918460018302840111640100000000831117156100c257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550508235935050506020810135906040013561016b565b60408051918252519081900360200190f35b34801561012c57600080fd5b506101556004803603604081101561014357600080fd5b5060ff81358116916020013516610219565b6040805160ff9092168252519081900360200190f35b6000600c858585856040518085805190602001908083835b602083106101a25780518252601f199092019160209182019101610183565b6001836020036101000a038019825116818451168082178552505050505050905001848152602001838152602001828152602001945050505050602060405180830381855afa1580156101f9573d6000803e3d6000fd5b5050506040513d602081101561020e57600080fd5b505195945050505050565b6000600b838360405160008152602001604052604051808360ff1660ff1681526020018260ff1660ff168152602001925050506020604051602081039080840390855afa15801561026e573d6000803e3d6000fd5b5050604051601f1901519493505050505600a165627a7a72305820511319dea79a3768182362ebd819025c9ff0e930c5ebd3b544175480b9fb12110029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xf8b0e18c6d284e6f216a633800c6a01f9f48bebf")
samplecontract.verifyProof.call("abcd", "0xabcd", "0xabcd", 5300)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101ef806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b792d7678114610045575b600080fd5b34801561005157600080fd5b506101036004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060208101359060400135610115565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b6020831061014c5780518252601f19909201916020918201910161012d565b6001836020036101000a038019825116818451168082178552505050505050905001848152602001838152602001828152602001945050505050602060405180830381855afa1580156101a3573d6000803e3d6000fd5b5050506040513d60208110156101b857600080fd5b5051959450505050505600a165627a7a723058203d17ab3b070505200d79a9487ee32e108f68b2f79c967927fa6305f9df49c2d30029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x2d05e6b9600f17a645a8f5a0aef3ae59baaf21db")
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
proof = "abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef12"
hashData = "0x7ee156df5091fbef71b96557542210a9c9ca851cc85aaf60026519b4aaccf491"
hashCoeff = "0x0245b0c61150cb7ae40b6b206896bc15879a873570eabfa763860728a73ff14d"
premium = 5300
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101ef806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b792d7678114610045575b600080fd5b34801561005157600080fd5b506101036004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060208101359060400135610115565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b6020831061014c5780518252601f19909201916020918201910161012d565b6001836020036101000a038019825116818451168082178552505050505050905001848152602001838152602001828152602001945050505050602060405180830381855afa1580156101a3573d6000803e3d6000fd5b5050506040513d60208110156101b857600080fd5b5051959450505050505600a165627a7a723058203d17ab3b070505200d79a9487ee32e108f68b2f79c967927fa6305f9df49c2d30029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x5921b25ffaad23f9921a24fb96517bd5cde72054")
samplecontract.verifyProof.call("abcd", "0xabcd", "0xabcd", 5300)
proof = "abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef12"
hashData = "0x7ee156df5091fbef71b96557542210a9c9ca851cc85aaf60026519b4aaccf491"
hashCoeff = "0x0245b0c61150cb7ae40b6b206896bc15879a873570eabfa763860728a73ff14d"
premium = 5300
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101ef806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b792d7678114610045575b600080fd5b34801561005157600080fd5b506101036004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060208101359060400135610115565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b6020831061014c5780518252601f19909201916020918201910161012d565b6001836020036101000a038019825116818451168082178552505050505050905001848152602001838152602001828152602001945050505050602060405180830381855afa1580156101a3573d6000803e3d6000fd5b5050506040513d60208110156101b857600080fd5b5051959450505050505600a165627a7a723058203d17ab3b070505200d79a9487ee32e108f68b2f79c967927fa6305f9df49c2d30029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x530c2758aa283abb60f8de563bc96b951da54af5")
proof = "abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef12"
hashData = "0x7ee156df5091fbef71b96557542210a9c9ca851cc85aaf60026519b4aaccf491"
hashCoeff = "0x0245b0c61150cb7ae40b6b206896bc15879a873570eabfa763860728a73ff14d"
premium = 5300
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
proof = [32 57 54 49 56 97 50 57 98 50 52 102 99 100 102 98 100 50 49 101 52 57 51 98 57 56 54 57 57 51 55 101 32 53 49 100 98 55 100 100 102 51 32 100 102 102 100 98 99 51 49 56 56 50 49 50 49 98 55 54 51 101 98 48 32 54 49 56 56 99 53 100 49 101 101 98 97 55 56 54 98 102 101 51 53 99 99 97 51 53 50 49 49 49 102 97 97 57 53 98 100 48 98 101 101 52 57 48 55 51 57 97 55 98 50 52 51 100 55 99 49 56 57 52 57 55 100 54 32 53 55 56 97 97 100 49 102 97 53 102 54 51 101 101 100 101 50 97 101 100 52 50 49 97 100 51 52 48 102 55 102 97 51 53 51 57 99 99 50 48 57 99 98 55 97 57 100 99 98 102 50 57 99 100 57 99 49 99 32 100 100 99 32 102 52 97 52 49 102 97 55 102 32 49 50 49 49 102 99 52 97 102 101 54 51 100 53 56 53 50 51 52 99 54 52 102 100 49 51 54 101 101 50 48 102 98 54 55 52 56 56 101 102 57 50 97 50 102 98 98 53 57 50 50 51 102 49 100 52 48 100 101 56 51 101 57 49 57 57 50 49 55 55 54 57 97 49 101 57 101 98 51 51 52 53 49 56 49 50 50 54 102 53 55 53 51 56 100 57 55 32 52 99 52 101 99 98 51 101 55 56 100 51 54 98 102 51 99 32 51 49 50 49 56 100 54 99 48 32 54 101 98 50 97 97 98 50 99 100 56 102 98 54 102 50 49 97 50 102 55 57 101 98 50 98 50 99 52 51 100 102 98 51 50 99 55 32 52 100 99 98 50 97 55 102 98 55 53 55 52 32 102 51 52 49 97 49 52 100 98 49 55 56 52 56 50 99 56 50 57 55 97 57 51 56 99 50 52 54 55 56 55 50 98 101 98 49 54 49 55 98 102 101 101 57 100 56 49 52 48 101 48 49 52 51 98 97 50 99 50 97 56 101 97 101 52 32 57 49 56 53 52 52 57 32 50 53 57 56 99 53 48 53 98 55 53 51 56 97 51 102 54 55 48 100 98 101 102 99 101 57 49 97 101 56 99 101 55 53 54 99 54 49 48 55 98 57 56 51 50 97 99 99 101 57 101 50 48 99 99 49 54 49 99 56 97 100 97 32 57 55 53 102 100 98 48 102 49 55 49 32 53 99 52 56 54 97 51 52 53 100 98 98 52 55 97 101 57 55 98 57 53 100 54 99 54 51 54 56 97 50 100 98 98 100 53 53 57 99 56 51 49 56 50 52 52 50 101 57 99 52 49 32 101 51 53 98 56 56 102 51 49 32 99 98 101 99 54 99 49 54 48 56 54 102 52 56 98 99 55 50 50 98 99 56 57 100 51 56 52 50 51 32 99 53 100 100 52 100 98 52 97 32 48 100 98 52 102 49 57 50 102 56 98 49 54 52 56 55 100 56 55 57 50 55 52 56 55 32 102 53 52 97 55 97 54 55 52 54 56 98 53 55 53 56 98 101 98 32 52 51 55 32 52 50 102 52 48 56 49 97 49 57 49 55 57 50 52 98 50 54 51 54 101 50 55 98 57 57 51 102 55 51 101 99 51 52 50 52 48 100 50 99 98 102 54 102 57 102 101 55 52 57 48 100 52 50 98 54 54 50 57 55 50 49 48 54 97 50 99 100 100 51 50 56 57 97 99 57 48 51 98 57 100 101 55 32 100 50 49 51 51 55 100 102 48 53 97 52 55 102 54 32 101 98 54 54 97 52 97 54 50 98 56 49 100 99 54 98 54 51 50 51 52 55 49 56 100 101 56 57 53 57 54 52 57 32 97 100 102 101 51 53 98 32 97 54 101 52 98 32 102 49 55 100 57 97 51 55 102 101 53 99 56 100 98 99 99 49 49 52 50 54 50 55 57 55 50 99 57 56 100 55 100 99 97 50 51 57 49 99 53 100 52 49 51 49 102 100 98 54 56 49 56 99 102 100 102 100 48 32 56 102 56 102 102 32 57 32 49 49 49 49 54 53 101 51 54 52 54 50 51 101 54 101 52 50 53 56 50 100 48 57 102 50 57 102 57 51 99 53 51 52 53 49 51 32 50 52 54 102 54 100 102 49 57 100 102 56 100 32 53 56 49 32 53 32 56 51 98 49 48 97 52 99 49 101 100 53 98 32 52 54 97 54 100 99 49 55 50 100 100 98 56 57 97 32 50 49 55 52 53 98 100 57 49 52 55 56 51 100 48 53 50 102 55 50 102 99 56 101 49 52 56 98 102 97 99 97 48 52 100 97 102 49 53 51 101 100 50 101 54 102 49 52 56 52 99 98 50 99 54 102 101 53 98 55 53 50 100 101 102 52 54 32 52 55 98 54 55 51 57 52 97 101 97 57 51 54 100 55 98 50 48 98 50 97 100 101 101 97 98 52 102 50 57 52 52 49 51 54 98 50 53 53 56 54 98 100 102 51 48 49 100 50 57 100 54 99 56 98 57 102 53 49 100 52 101 50 100 100 52 53 55 52 56 97 55 50 101 53 101 52 48 99 101 32 97 98 52 57 50 100 100 52 50 57 101 100 102 99 56]
proof = [32 57 54 49 56 97 50 57 98 50 52 102 99 100 102 98 100 50 49 101 52 57 51 98 57 56 54 57 57 51 55 101 32 53 49 100 98 55 100 100 102 51 32 100 102 102 100 98 99 51 49 56 56 50 49 50 49 98 55 54 51 101 98 48 32 54 49 56 56 99 53 100 49 101 101 98 97 55 56 54 98 102 101 51 53 99 99 97 51 53 50 49 49 49 102 97 97 57 53 98 100 48 98 101 101 52 57 48 55 51 57 97 55 98 50 52 51 100 55 99 49 56 57 52 57 55 100 54 32 53 55 56 97 97 100 49 102 97 53 102 54 51 101 101 100 101 50 97 101 100 52 50 49 97 100 51 52 48 102 55 102 97 51 53 51 57 99 99 50 48 57 99 98 55 97 57 100 99 98 102 50 57 99 100 57 99 49 99 32 100 100 99 32 102 52 97 52 49 102 97 55 102 32 49 50 49 49 102 99 52 97 102 101 54 51 100 53 56 53 50 51 52 99 54 52 102 100 49 51 54 101 101 50 48 102 98 54 55 52 56 56 101 102 57 50 97 50 102 98 98 53 57 50 50 51 102 49 100 52 48 100 101 56 51 101 57 49 57 57 50 49 55 55 54 57 97 49 101 57 101 98 51 51 52 53 49 56 49 50 50 54 102 53 55 53 51 56 100 57 55 32 52 99 52 101 99 98 51 101 55 56 100 51 54 98 102 51 99 32 51 49 50 49 56 100 54 99 48 32 54 101 98 50 97 97 98 50 99 100 56 102 98 54 102 50 49 97 50 102 55 57 101 98 50 98 50 99 52 51 100 102 98 51 50 99 55 32 52 100 99 98 50 97 55 102 98 55 53 55 52 32 102 51 52 49 97 49 52 100 98 49 55 56 52 56 50 99 56 50 57 55 97 57 51 56 99 50 52 54 55 56 55 50 98 101 98 49 54 49 55 98 102 101 101 57 100 56 49 52 48 101 48 49 52 51 98 97 50 99 50 97 56 101 97 101 52 32 57 49 56 53 52 52 57 32 50 53 57 56 99 53 48 53 98 55 53 51 56 97 51 102 54 55 48 100 98 101 102 99 101 57 49 97 101 56 99 101 55 53 54 99 54 49 48 55 98 57 56 51 50 97 99 99 101 57 101 50 48 99 99 49 54 49 99 56 97 100 97 32 57 55 53 102 100 98 48 102 49 55 49 32 53 99 52 56 54 97 51 52 53 100 98 98 52 55 97 101 57 55 98 57 53 100 54 99 54 51 54 56 97 50 100 98 98 100 53 53 57 99 56 51 49 56 50 52 52 50 101 57 99 52 49 32 101 51 53 98 56 56 102 51 49 32 99 98 101 99 54 99 49 54 48 56 54 102 52 56 98 99 55 50 50 98 99 56 57 100 51 56 52 50 51 32 99 53 100 100 52 100 98 52 97 32 48 100 98 52 102 49 57 50 102 56 98 49 54 52 56 55 100 56 55 57 50 55 52 56 55 32 102 53 52 97 55 97 54 55 52 54 56 98 53 55 53 56 98 101 98 32 52 51 55 32 52 50 102 52 48 56 49 97 49 57 49 55 57 50 52 98 50 54 51 54 101 50 55 98 57 57 51 102 55 51 101 99 51 52 50 52 48 100 50 99 98 102 54 102 57 102 101 55 52 57 48 100 52 50 98 54 54 50 57 55 50 49 48 54 97 50 99 100 100 51 50 56 57 97 99 57 48 51 98 57 100 101 55 32 100 50 49 51 51 55 100 102 48 53 97 52 55 102 54 32 101 98 54 54 97 52 97 54 50 98 56 49 100 99 54 98 54 51 50 51 52 55 49 56 100 101 56 57 53 57 54 52 57 32 97 100 102 101 51 53 98 32 97 54 101 52 98 32 102 49 55 100 57 97 51 55 102 101 53 99 56 100 98 99 99 49 49 52 50 54 50 55 56]
proof = [32 57 54 49 56 97 50 57 98 50 52 102 99 100 102 98 100 50 49 101 52 57 51 98 57 56 54 57 57 51 55 101 32 53 49 100 98 55 100 100 102 51 32 100 102 102 100 98 99 51 49 56 56 50 49 50 49 98 55 54 51 101 98 48 32 54 49 56 56 99 53 100 49 101 101 98 97 55 56 54 98 102 101 51 53 99 99 97 51 53 50 49 49 49 102 97 97 57 53 98 100 48 98 101 101 52 57 48 55 51 57 97 55 98 50 52 51 100 55 99 49 56 57 52 57 55 100 54 32 53 55 56 97 97 100 49 102 97 53 102 54 51 101 101 100 101]
proof = [32 57 54 49 56 97 50 57 98 50 52 102 99 100 102 98 100 50 49 101 52 57 51 98]
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101ef806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b792d7678114610045575b600080fd5b34801561005157600080fd5b506101036004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060208101359060400135610115565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b6020831061014c5780518252601f19909201916020918201910161012d565b6001836020036101000a038019825116818451168082178552505050505050905001848152602001838152602001828152602001945050505050602060405180830381855afa1580156101a3573d6000803e3d6000fd5b5050506040513d60208110156101b857600080fd5b5051959450505050505600a165627a7a723058203d17ab3b070505200d79a9487ee32e108f68b2f79c967927fa6305f9df49c2d30029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x59605011785dc8d82dd908451678884f052254a7")
samplecontract.verifyProof.call("abcd", "0xabcd", "0xabcd", 5300)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
samplecontract.verifyProof.call(tupleData, hashData, hashCoeff, premium)
proof = "abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef12"
hashData = "0x7ee156df5091fbef71b96557542210a9c9ca851cc85aaf60026519b4aaccf491"
hashCoeff = "0x0245b0c61150cb7ae40b6b206896bc15879a873570eabfa763860728a73ff14d"
premium = 5300
samplecontract.verifyProof.call(tupleData, hashData, hashCoeff, premium)
samplecontract.verifyProof.call(tupleData, tupleData, hashCoeff, premium)
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101ef806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b792d7678114610045575b600080fd5b34801561005157600080fd5b506101036004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060208101359060400135610115565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b6020831061014c5780518252601f19909201916020918201910161012d565b6001836020036101000a038019825116818451168082178552505050505050905001848152602001838152602001828152602001945050505050602060405180830381855afa1580156101a3573d6000803e3d6000fd5b5050506040513d60208110156101b857600080fd5b5051959450505050505600a165627a7a723058203d17ab3b070505200d79a9487ee32e108f68b2f79c967927fa6305f9df49c2d30029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xfc16e4bccb4967f50ed3d5edbe4704be36396229")
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
proof = "abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef1234abcdef12"
hashData = "0x7ee156df5091fbef71b96557542210a9c9ca851cc85aaf60026519b4aaccf491"
hashCoeff = "0x0245b0c61150cb7ae40b6b206896bc15879a873570eabfa763860728a73ff14d"
premium = 5300
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = [50, 102, 50, 48, 52, 56, 52, 101, 55, 49, 100, 51, 52, 101, 97, 100, 54, 100, 98, 56, 98, 99, 55, 50, 55, 97, 53, 57, 101, 102, 52, 50, 57, 51, 102, 100, 49, 48, 98, 53, 99, 53, 100, 49, 98, 99, 51, 56, 55, 50, 32, 99, 100, 56, 97, 102, 57, 50, 49, 51, 98, 102, 101, 97, 49, 98, 100, 97, 57, 56, 99, 50, 99, 100, 100, 102, 51, 102, 102, 48, 51, 54, 98, 98, 52, 99, 53, 52, 52, 97, 56, 98, 52, 56, 56, 48, 98, 55, 98, 53, 51, 57, 102, 99, 55, 97, 100, 102, 52, 54, 98, 102, 57, 57, 32, 98, 51, 100, 54, 54, 50, 52, 56, 102, 56, 99, 100, 102, 32, 49, 55, 102, 55, 57, 99, 99, 100, 57, 50, 50, 54, 53, 52, 98, 56, 57, 99, 57, 56, 56, 97, 49, 97, 51, 98, 49, 99, 51, 51, 50, 56, 55, 97, 97, 102, 97, 54, 50, 52, 55, 32, 50, 56, 54, 55, 101, 99, 102, 101, 50, 101, 48, 102, 99, 100, 56, 101, 97, 57, 102, 57, 54, 50, 50, 102, 55, 55, 98, 57, 56, 51, 53, 51, 57, 54, 100, 57, 48, 57, 57, 51, 98, 98, 55, 54, 99, 99, 56, 97, 52, 53, 57, 101, 49, 101, 50, 54, 100, 53, 57, 51, 57, 54, 101, 101, 49, 97, 52, 99, 100, 55, 53, 49, 50, 53, 52, 55, 48, 99, 101, 98, 100, 99, 98, 50, 55, 32, 98, 97, 53, 57, 55, 98, 52, 56, 97, 98, 98, 49, 54, 97, 98, 54, 56, 54, 49, 97, 54, 57, 100, 100, 98, 50, 49, 55, 97, 98, 49, 52, 50, 99, 57, 49, 55, 99, 55, 54, 48, 102, 99, 53, 56, 54, 54, 97, 56, 50, 55, 32, 55, 98, 52, 55, 57, 54, 55, 97, 57, 55, 101, 32, 55, 102, 48, 56, 55, 50, 48, 53, 48, 99, 55, 49, 53, 55, 101, 102, 99, 54, 56, 53, 101, 100, 56, 101, 48, 101, 55, 102, 51, 102, 100, 50, 99, 50, 98, 97, 53, 56, 100, 101, 99, 55, 97, 102, 97, 102, 101, 100, 48, 32, 53, 52, 49, 49, 98, 55, 102, 97, 101, 49, 53, 100, 102, 49, 48, 57, 101, 49, 53, 49, 51, 50, 97, 32, 99, 57, 98, 50, 53, 97, 53, 54, 102, 53, 97, 102, 56, 56, 57, 53, 102, 55, 56, 97, 53, 32, 50, 32, 54, 97, 102, 97, 98, 100, 55, 50, 49, 56, 97, 50, 53, 32, 51, 101, 100, 49, 98, 99, 50, 50, 57, 55, 50, 100, 102, 54, 57, 32, 51, 97, 99, 99, 53, 54, 57, 55, 55, 97, 50, 55, 53, 50, 102, 52, 49, 98, 97, 51, 54, 52, 52, 32, 100, 101, 52, 50, 98, 100, 48, 97, 51, 55, 54, 55, 101, 56, 97, 49, 57, 55, 99, 100, 49, 57, 102, 102, 102, 32, 51, 101, 98, 50, 51, 101, 97, 98, 57, 32, 98, 101, 57, 50, 99, 101, 50, 97, 53, 49, 57, 102, 101, 98, 50, 32, 98, 49, 57, 52, 56, 32, 97, 97, 57, 97, 52, 50, 55, 54, 53, 32, 51, 100, 100, 101, 56, 97, 52, 102, 97, 97, 52, 101, 99, 100, 101, 50, 57, 57, 54, 56, 51, 56, 101, 101, 98, 53, 55, 50, 57, 52, 97, 52, 53, 53, 50, 50, 52, 54, 48, 55, 102, 98, 49, 100, 101, 101, 57, 55, 49, 57, 48, 99, 53, 49, 97, 100, 57, 100, 55, 55, 53, 56, 49, 99, 49, 54, 97, 99, 55, 98, 99, 99, 97, 51, 57, 56, 48, 50, 50, 57, 51, 54, 54, 97, 55, 49, 56, 49, 99, 32, 98, 99, 101, 52, 100, 55, 53, 57, 102, 32, 49, 52, 101, 56, 48, 55, 50, 53, 54, 50, 97, 100, 99, 53, 97, 51, 101, 97, 52, 56, 98, 54, 49, 51, 49, 32, 98, 55, 98, 53, 54, 53, 52, 97, 48, 97, 48, 53, 101, 101, 49, 51, 56, 49, 101, 55, 97, 32, 101, 51, 54, 97, 49, 98, 56, 54, 50, 100, 100, 32, 50, 97, 97, 32, 54, 97, 50, 99, 50, 50, 102, 101, 48, 98, 53, 56, 97, 97, 52, 50, 54, 56, 53, 54, 50, 55, 97, 99, 99, 50, 102, 55, 101, 52, 100, 55, 97, 98, 56, 99, 50, 52, 54, 32, 56, 54, 50, 57, 50, 55, 55, 53, 99, 51, 98, 98, 55, 32, 50, 55, 52, 97, 102, 57, 56, 50, 55, 50, 56, 51, 101, 99, 50, 52, 51, 32, 99, 55, 48, 54, 57, 49, 57, 55, 54, 55, 48, 49, 100, 97, 97, 55, 99, 101, 102, 55, 57, 49, 100, 99, 99, 100, 102, 32, 101, 53, 56, 102, 56, 56, 102, 56, 54, 97, 101, 50, 48, 49, 97, 55, 49, 99, 101, 101, 48, 102, 101, 53, 56, 102, 51, 32, 54, 56, 48, 101, 49, 32, 102, 32, 54, 97, 101, 55, 49, 50, 49, 57, 49, 101, 98, 99, 100, 97, 52, 32, 101, 51, 50, 99, 52, 53, 52, 97, 98, 97, 57, 49, 98, 53, 48, 100, 100, 52, 57, 53, 53, 49, 56, 102, 100, 57, 97, 54, 100, 102, 102, 101, 98, 55, 48, 49, 56, 51, 57, 49, 50, 32, 97, 99, 102, 97, 55, 49, 57, 51, 50, 53, 48, 99, 98, 99, 49, 56, 48, 57, 53, 50, 57, 102, 52, 99, 100, 32, 55, 57, 102, 57, 49, 98, 56, 56, 52, 101, 57, 52, 54, 32, 97, 97, 100, 56, 99, 32, 57, 98, 56, 97, 102, 53, 97, 56, 101, 100, 99, 100, 49, 102, 49, 50, 55, 53, 55, 98, 55, 54, 57, 52, 51, 50, 52, 101, 55, 32, 99, 101, 56, 55, 97, 97, 51, 56, 49, 102, 101, 53, 51, 50, 55, 55, 101, 52, 50, 102, 54, 99, 48, 52, 102, 98, 50, 54, 97, 101, 52, 55, 49, 55, 56, 57, 51, 57, 53, 50, 97, 49, 49, 55, 100, 53, 56, 53, 98, 50, 101, 49, 100, 50, 49, 56, 57, 55, 100, 55, 55, 57, 102, 56, 51, 101, 98, 101, 57, 50, 53, 102, 57, 53, 52, 55, 53, 57, 50, 100, 52, 49, 97, 51, 99, 102, 100, 102, 102, 100, 102, 57, 102, 54, 98, 50, 49, 98, 56, 32, 98, 99, 56, 55, 98, 50, 49, 98, 56, 100, 48, 101, 55, 50, 102, 50, 51, 50, 57, 98, 54, 53, 53, 56, 101, 98, 57, 100, 54, 52, 101, 50, 54, 57, 102, 55, 97, 32, 57, 101, 101, 99, 50, 56, 57, 54, 57, 50, 102, 53, 52, 101, 98, 54, 56, 100, 101, 97, 102, 32, 57, 100, 56, 57, 57, 49, 56, 56, 55, 55, 100, 55, 52, 102, 98, 97, 49]
premium = 7191
hashData = [111 24 20 107 245 107 158 62 87 244 16 72 107 5 77 124 45 166 80 114 139 173 102 33 136 61 210 75 110 138 41 255]
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101ef806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b792d7678114610045575b600080fd5b34801561005157600080fd5b506101036004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060208101359060400135610115565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b6020831061014c5780518252601f19909201916020918201910161012d565b6001836020036101000a038019825116818451168082178552505050505050905001848152602001838152602001828152602001945050505050602060405180830381855afa1580156101a3573d6000803e3d6000fd5b5050506040513d60208110156101b857600080fd5b5051959450505050505600a165627a7a723058203d17ab3b070505200d79a9487ee32e108f68b2f79c967927fa6305f9df49c2d30029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x7abe8dda19122b5fa42cb18455a1a53c9eacc1f9")
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
proof = [49, 56, 57, 51, 97, 100, 101, 50, 99, 98, 32, 54, 54, 51, 50, 50, 101, 57, 55, 49, 99, 49, 55, 57, 97, 53, 101, 98, 99, 51, 100, 54, 99, 49, 54, 56, 52, 97, 98, 102, 52, 98, 32, 100, 49, 99, 97, 100, 50, 55, 50, 50, 99, 55, 55, 51, 55, 101, 53, 52, 50, 51, 55, 55, 50, 55, 102, 55, 97, 53, 57, 101, 100, 55, 55, 49, 53, 52, 53, 52, 102, 48, 51, 52, 50, 102, 53, 54, 49, 98, 51, 101, 50, 50, 55, 97, 101, 101, 51, 101, 102, 51, 101, 101, 56, 51, 101, 102, 101, 99, 53, 52, 98, 54, 50, 55, 97, 99, 100, 56, 57, 99, 32, 57, 99, 97, 32, 50, 49, 54, 97, 101, 52, 49, 54, 56, 49, 98, 97, 48, 57, 49, 55, 99, 55, 50, 53, 56, 51, 50, 99, 98, 101, 97, 52, 56, 56, 97, 53, 57, 57, 54, 101, 56, 56, 54, 98, 56, 99, 100, 52, 53, 57, 102, 98, 57, 32, 52, 51, 54, 56, 100, 57, 52, 102, 102, 50, 49, 54, 99, 53, 98, 50, 99, 51, 102, 52, 55, 102, 53, 56, 50, 32, 50, 56, 55, 55, 48, 49, 54, 50, 54, 52, 51, 57, 57, 53, 102, 101, 101, 99, 98, 51, 52, 50, 99, 97, 52, 99, 51, 54, 101, 99, 49, 101, 49, 57, 99, 32, 56, 32, 101, 99, 49, 53, 97, 97, 56, 102, 52, 51, 101, 55, 100, 55, 100, 32, 51, 53, 57, 101, 100, 97, 101, 53, 56, 97, 56, 49, 50, 32, 55, 99, 55, 55, 51, 102, 97, 102, 97, 57, 51, 99, 101, 57, 101, 55, 52, 56, 99, 32, 100, 50, 53, 50, 50, 53, 54, 52, 50, 32, 99, 52, 48, 53, 51, 52, 50, 50, 100, 57, 50, 53, 49, 52, 56, 101, 51, 99, 52, 32, 57, 97, 50, 97, 55, 57, 100, 53, 100, 100, 97, 57, 101, 54, 48, 98, 100, 55, 100, 52, 55, 100, 99, 50, 53, 98, 98, 99, 101, 97, 49, 102, 56, 99, 99, 49, 48, 97, 48, 51, 50, 32, 98, 100, 102, 57, 48, 101, 52, 50, 51, 101, 101, 50, 49, 56, 98, 52, 57, 52, 50, 100, 56, 32, 99, 55, 99, 51, 51, 52, 99, 52, 51, 53, 56, 100, 48, 98, 99, 100, 52, 56, 51, 99, 102, 55, 48, 55, 54, 102, 54, 52, 51, 49, 56, 101, 56, 57, 97, 55, 50, 99, 97, 49, 50, 102, 99, 55, 99, 49, 101, 55, 48, 101, 102, 57, 101, 52, 52, 51, 55, 56, 53, 50, 99, 52, 49, 49, 53, 56, 51, 32, 55, 100, 97, 52, 52, 57, 51, 54, 102, 102, 101, 50, 51, 52, 97, 49, 48, 101, 100, 99, 51, 51, 55, 101, 49, 53, 57, 101, 57, 32, 100, 98, 102, 50, 53, 101, 52, 32, 101, 57, 55, 55, 48, 52, 56, 51, 50, 97, 55, 100, 57, 49, 51, 101, 56, 101, 97, 97, 52, 50, 48, 52, 49, 52, 98, 98, 51, 52, 49, 54, 101, 102, 102, 52, 50, 100, 98, 56, 48, 32, 53, 100, 98, 51, 98, 99, 52, 50, 57, 98, 97, 32, 100, 98, 53, 101, 50, 55, 100, 32, 102, 50, 48, 102, 55, 99, 55, 56, 55, 53, 57, 51, 97, 49, 51, 100, 101, 101, 52, 99, 97, 102, 50, 50, 99, 50, 100, 54, 50, 100, 57, 50, 55, 102, 55, 54, 52, 55, 56, 98, 97, 53, 100, 54, 54, 97, 56, 49, 100, 52, 52, 51, 102, 101, 57, 98, 48, 100, 97, 57, 101, 53, 102, 52, 54, 102, 53, 99, 102, 49, 48, 102, 54, 98, 101, 54, 52, 99, 54, 54, 55, 97, 53, 53, 99, 101, 50, 32, 101, 56, 97, 55, 53, 54, 57, 99, 102, 99, 99, 55, 98, 99, 48, 57, 101, 55, 54, 55, 101, 99, 56, 51, 57, 51, 102, 51, 57, 98, 51, 51, 98, 52, 50, 50, 54, 50, 50, 99, 54, 97, 101, 51, 102, 97, 99, 50, 52, 32, 55, 99, 101, 55, 52, 101, 102, 53, 55, 99, 101, 54, 100, 32, 56, 53, 101, 102, 100, 102, 53, 52, 55, 55, 98, 51, 99, 56, 100, 101, 50, 49, 54, 49, 56, 57, 101, 51, 48, 54, 99, 57, 52, 52, 101, 56, 54, 52, 49, 50, 54, 51, 54, 102, 55, 101, 48, 98, 98, 98, 48, 54, 49, 32, 51, 50, 99, 52, 100, 49, 50, 51, 98, 50, 101, 54, 97, 50, 98, 98, 100, 97, 101, 101, 98, 98, 54, 57, 50, 102, 48, 32, 97, 52, 50, 50, 49, 56, 100, 49, 98, 102, 97, 55, 55, 50, 97, 99, 53, 49, 54, 56, 51, 55, 48, 53, 51, 51, 56, 56, 57, 97, 48, 52, 48, 32, 50, 55, 97, 52, 55, 57, 100, 100, 49, 55, 55, 51, 50, 102, 97, 32, 56, 50, 102, 32, 99, 51, 98, 32, 99, 101, 97, 56, 102, 55, 102, 101, 49, 53, 101, 101, 53, 49, 98, 55, 50, 49, 51, 50, 98, 97, 54, 56, 98, 102, 53, 50, 100, 101, 50, 51, 97, 32, 52, 49, 102, 52, 98, 97, 54, 53, 56, 99, 98, 51, 97, 32, 101, 32, 53, 50, 56, 99, 54, 49, 48, 54, 56, 56, 98, 51, 55, 98, 97, 99, 98, 54, 97, 51, 48, 55, 55, 101, 55, 98, 102, 99, 52, 97, 54, 99, 98, 53, 49, 50, 57, 100, 57, 53, 55, 50, 52, 54, 99, 32, 100, 98, 97, 102, 97, 100, 102, 51, 101, 57, 53, 51, 57, 51, 55, 101, 55, 102, 102, 51, 51, 54, 54, 49, 56, 100, 53, 56, 52, 51, 51, 53, 48, 54, 98, 100, 52, 98, 57, 51, 101, 101, 52, 97, 100, 97, 50, 98, 54, 97, 57, 51, 54, 56, 98, 98, 101, 51, 56, 49, 56, 52, 51, 99, 100, 101, 52, 99, 54, 50, 48, 56, 97, 100, 56, 97, 56, 99, 52, 51, 99, 50, 99, 54, 52, 51, 98, 49, 54, 49, 98, 32, 97, 98, 52, 98, 48, 97, 98, 101, 52, 101, 51, 101, 53, 99, 51, 53, 53, 101, 52, 50, 98, 97, 49, 102, 51, 99, 57, 50, 97, 53, 101, 57, 98, 102, 97, 55, 51, 102, 102, 54, 57, 50, 56, 49, 101, 101, 54, 57, 53, 54, 54, 57, 52, 50, 53, 53, 54, 49, 50, 50, 55, 51, 52, 99, 101, 98, 53, 54, 57, 49, 98, 53, 54, 97, 52, 52, 53, 100, 49, 51, 55, 101, 98, 55, 49, 52, 55, 49, 97, 57, 101, 97, 51, 102, 51, 99, 49, 100, 97, 99, 53, 32, 57, 102, 99, 51, 100, 52, 98, 100, 57, 53, 50, 57, 57, 50, 55, 102, 51, 98, 49, 54, 102]
premium = 7191
hashData = 6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101ef806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b792d7678114610045575b600080fd5b34801561005157600080fd5b506101036004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060208101359060400135610115565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b6020831061014c5780518252601f19909201916020918201910161012d565b6001836020036101000a038019825116818451168082178552505050505050905001848152602001838152602001828152602001945050505050602060405180830381855afa1580156101a3573d6000803e3d6000fd5b5050506040513d60208110156101b857600080fd5b5051959450505050505600a165627a7a723058203d17ab3b070505200d79a9487ee32e108f68b2f79c967927fa6305f9df49c2d30029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xd9b40f71f4fb2ac0ee65ac34ee3a9f45ac55883c")
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
proof = [32, 54, 52, 97, 51, 50, 56, 100, 99, 100, 50, 55, 100, 98, 99, 51, 102, 49, 57, 98, 98, 99, 52, 98, 50, 52, 50, 48, 54, 48, 102, 49, 100, 53, 55, 49, 54, 57, 32, 100, 50, 55, 53, 98, 51, 54, 98, 57, 52, 51, 97, 101, 55, 51, 32, 98, 100, 48, 101, 49, 101, 50, 51, 54, 50, 99, 51, 99, 50, 49, 51, 101, 52, 50, 32, 56, 98, 98, 32, 57, 97, 101, 54, 56, 50, 100, 102, 55, 53, 52, 98, 53, 100, 97, 56, 98, 49, 100, 50, 50, 50, 50, 51, 55, 49, 102, 54, 98, 98, 55, 49, 49, 97, 52, 97, 56, 50, 100, 32, 48, 55, 99, 98, 48, 50, 49, 53, 97, 49, 100, 56, 49, 99, 57, 102, 57, 54, 53, 50, 53, 51, 98, 55, 100, 97, 99, 50, 52, 55, 48, 100, 102, 55, 97, 102, 51, 50, 101, 49, 55, 97, 101, 97, 51, 52, 97, 98, 99, 102, 98, 57, 100, 98, 51, 52, 51, 51, 54, 56, 98, 50, 52, 53, 49, 50, 55, 49, 55, 51, 48, 51, 49, 50, 55, 50, 51, 100, 50, 56, 55, 99, 102, 98, 102, 53, 102, 52, 51, 102, 48, 98, 102, 101, 52, 55, 52, 52, 51, 55, 102, 99, 99, 32, 52, 57, 53, 56, 99, 51, 102, 100, 51, 97, 57, 99, 53, 54, 102, 98, 102, 32, 52, 101, 56, 97, 101, 50, 51, 50, 53, 98, 55, 97, 52, 100, 51, 50, 50, 53, 50, 102, 54, 32, 55, 55, 97, 99, 48, 57, 49, 97, 50, 32, 49, 102, 54, 53, 98, 99, 53, 53, 51, 99, 55, 57, 49, 50, 50, 50, 49, 100, 97, 53, 54, 101, 56, 52, 50, 50, 97, 102, 97, 54, 54, 49, 99, 57, 101, 54, 101, 49, 48, 97, 100, 51, 99, 98, 52, 32, 56, 49, 102, 100, 55, 51, 50, 54, 51, 51, 55, 51, 98, 100, 100, 49, 50, 49, 57, 32, 57, 49, 49, 56, 53, 97, 99, 49, 49, 55, 100, 100, 98, 57, 101, 99, 101, 49, 50, 101, 49, 98, 56, 101, 56, 51, 48, 99, 52, 50, 101, 54, 54, 99, 100, 102, 102, 55, 101, 99, 53, 51, 53, 102, 57, 49, 56, 56, 51, 98, 49, 49, 102, 51, 49, 53, 52, 52, 52, 100, 49, 49, 56, 98, 53, 97, 55, 100, 49, 57, 97, 99, 97, 50, 52, 51, 50, 99, 49, 32, 48, 55, 99, 57, 50, 49, 55, 49, 48, 53, 54, 98, 55, 49, 50, 99, 100, 102, 49, 49, 50, 57, 48, 49, 53, 49, 57, 101, 50, 50, 98, 49, 52, 98, 48, 98, 102, 50, 54, 49, 99, 52, 54, 100, 98, 100, 51, 97, 56, 50, 100, 57, 101, 55, 48, 32, 51, 55, 52, 56, 52, 101, 53, 55, 52, 50, 99, 53, 48, 54, 55, 53, 99, 101, 51, 55, 97, 53, 48, 100, 55, 98, 56, 53, 99, 32, 49, 54, 97, 32, 52, 51, 98, 32, 49, 102, 102, 56, 57, 98, 56, 52, 51, 98, 49, 32, 48, 54, 102, 98, 101, 56, 53, 50, 52, 99, 57, 49, 102, 49, 97, 56, 102, 97, 51, 53, 49, 53, 99, 98, 53, 98, 52, 54, 98, 54, 56, 55, 98, 53, 48, 32, 49, 100, 100, 98, 99, 51, 52, 51, 97, 54, 101, 51, 102, 56, 53, 32, 101, 97, 55, 53, 98, 57, 101, 50, 100, 50, 49, 55, 100, 53, 51, 97, 55, 51, 57, 101, 51, 55, 52, 32, 51, 51, 102, 49, 52, 52, 52, 55, 55, 52, 55, 97, 101, 98, 56, 49, 99, 52, 55, 57, 57, 54, 55, 102, 56, 56, 53, 99, 51, 54, 54, 50, 97, 99, 53, 102, 50, 53, 48, 32, 51, 57, 57, 56, 49, 53, 55, 50, 98, 52, 102, 102, 56, 55, 99, 49, 54, 57, 51, 53, 48, 97, 55, 53, 51, 57, 53, 102, 55, 56, 102, 97, 56, 49, 51, 49, 100, 102, 49, 98, 52, 50, 51, 50, 52, 56, 49, 55, 98, 98, 54, 49, 101, 50, 100, 52, 52, 100, 51, 54, 53, 54, 57, 32, 99, 56, 102, 101, 56, 53, 98, 49, 53, 55, 54, 56, 48, 49, 98, 51, 48, 32, 54, 102, 100, 55, 53, 52, 101, 55, 99, 102, 101, 49, 49, 97, 48, 53, 101, 100, 51, 52, 51, 50, 50, 101, 54, 97, 100, 100, 99, 52, 99, 98, 48, 98, 100, 53, 102, 57, 51, 97, 100, 100, 50, 57, 102, 50, 54, 51, 102, 32, 53, 100, 49, 57, 57, 102, 57, 55, 54, 57, 100, 98, 57, 56, 48, 52, 100, 97, 100, 97, 55, 55, 57, 57, 101, 55, 53, 51, 53, 32, 52, 53, 50, 101, 56, 55, 50, 102, 57, 100, 54, 50, 54, 97, 100, 32, 98, 53, 54, 55, 54, 99, 101, 32, 52, 57, 51, 50, 57, 50, 97, 99, 98, 99, 54, 52, 50, 52, 102, 54, 53, 57, 57, 56, 57, 55, 49, 32, 51, 32, 54, 55, 97, 32, 48, 53, 48, 49, 52, 55, 56, 55, 54, 100, 49, 54, 56, 55, 57, 55, 54, 57, 48, 51, 56, 102, 51, 99, 51, 100, 56, 56, 56, 102, 97, 99, 99, 97, 99, 51, 55, 55, 100, 49, 99, 56, 55, 56, 51, 97, 57, 101, 99, 56, 98, 98, 101, 56, 54, 53, 102, 99, 55, 57, 101, 101, 102, 102, 56, 49, 54, 57, 57, 55, 102, 49, 100, 99, 55, 55, 99, 102, 48, 51, 54, 51, 57, 57, 98, 49, 49, 97, 54, 100, 49, 32, 97, 97, 101, 53, 98, 100, 54, 51, 48, 56, 55, 32, 48, 50, 102, 50, 54, 97, 56, 51, 48, 99, 102, 49, 53, 53, 48, 51, 102, 49, 53, 54, 50, 52, 56, 50, 97, 51, 48, 57, 99, 57, 98, 102, 57, 99, 53, 53, 51, 53, 98, 49, 97, 102, 54, 51, 50, 55, 99, 97, 55, 100, 55, 97, 98, 101, 53, 54, 50, 98, 100, 54, 97, 50, 100, 50, 49, 51, 56, 32, 55, 51, 52, 50, 99, 54, 49, 50, 56, 53, 57, 102, 54, 52, 54, 56, 100, 100, 99, 102, 55, 49, 51, 56, 49, 97, 97, 52, 52, 100, 99, 55, 97, 32, 53, 49, 98, 102, 57, 54, 52, 98, 52, 97, 100, 101, 50, 101, 101, 99, 51, 52, 56, 54, 52, 32, 100, 53, 101, 49, 52, 100, 49, 54, 50, 32, 98, 101, 49, 53, 52, 102, 97, 53, 52, 98, 49, 57, 56, 54, 51, 100, 49, 53, 100, 101, 49, 54, 48, 53, 49, 54, 101, 102, 51, 57, 56, 54, 98, 54, 101, 49, 55, 53, 51, 49, 97, 54, 52, 100, 49, 52, 53, 51, 50, 49, 99, 100, 52, 99, 54, 50, 53]
premium = 7191
hashData = "6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "c0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
samplecontract.verifyProof.call("abcd", "0xabcd", "0xabcd", 5300)
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101ef806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b792d7678114610045575b600080fd5b34801561005157600080fd5b506101036004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060208101359060400135610115565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b6020831061014c5780518252601f19909201916020918201910161012d565b6001836020036101000a038019825116818451168082178552505050505050905001848152602001838152602001828152602001945050505050602060405180830381855afa1580156101a3573d6000803e3d6000fd5b5050506040513d60208110156101b857600080fd5b5051959450505050505600a165627a7a723058203d17ab3b070505200d79a9487ee32e108f68b2f79c967927fa6305f9df49c2d30029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x9e6c4e27e0d2c20cfbbbcc6bf7ce8724752412cb")
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
proof = [49, 48, 98, 54, 53, 54, 56, 49, 101, 57, 98, 48, 98, 100, 97, 100, 100, 53, 100, 51, 56, 49, 50, 48, 100, 97, 102, 100, 97, 49, 53, 102, 49, 57, 97, 101, 98, 98, 101, 51, 101, 48, 50, 100, 53, 52, 98, 48, 32, 100, 99, 53, 56, 55, 53, 49, 56, 98, 57, 52, 54, 51, 55, 50, 50, 99, 56, 102, 97, 97, 52, 102, 53, 51, 101, 56, 50, 100, 53, 99, 57, 52, 57, 57, 98, 50, 52, 53, 102, 99, 50, 98, 97, 55, 57, 53, 98, 55, 55, 97, 98, 52, 100, 101, 57, 101, 101, 97, 52, 57, 100, 102, 99, 52, 53, 98, 53, 57, 56, 49, 100, 55, 101, 50, 53, 100, 102, 99, 50, 49, 51, 54, 50, 56, 49, 51, 32, 56, 50, 49, 52, 101, 53, 48, 54, 100, 49, 56, 100, 100, 56, 57, 52, 55, 57, 99, 54, 54, 50, 97, 54, 49, 102, 53, 102, 57, 57, 55, 52, 49, 56, 98, 100, 100, 51, 50, 52, 101, 50, 54, 56, 52, 32, 100, 97, 97, 53, 51, 56, 99, 32, 51, 50, 48, 57, 55, 32, 57, 101, 98, 49, 57, 52, 50, 52, 57, 54, 52, 102, 52, 51, 49, 51, 101, 51, 52, 98, 97, 101, 50, 51, 54, 56, 97, 99, 55, 100, 98, 56, 55, 52, 55, 100, 50, 102, 53, 56, 98, 52, 50, 32, 52, 99, 49, 55, 97, 99, 98, 97, 51, 102, 50, 52, 56, 102, 56, 32, 56, 100, 56, 52, 51, 56, 50, 57, 102, 101, 56, 57, 52, 49, 51, 102, 99, 55, 49, 98, 55, 98, 52, 102, 99, 101, 57, 102, 52, 52, 56, 32, 98, 52, 57, 50, 55, 102, 54, 55, 101, 52, 102, 53, 97, 55, 99, 49, 51, 53, 54, 57, 54, 51, 100, 99, 48, 98, 57, 32, 50, 57, 97, 50, 97, 51, 100, 50, 100, 99, 98, 100, 54, 57, 102, 53, 100, 50, 99, 101, 51, 52, 56, 100, 97, 101, 102, 53, 52, 99, 55, 54, 98, 52, 98, 102, 98, 102, 55, 54, 51, 51, 100, 50, 101, 102, 57, 102, 99, 102, 98, 99, 53, 53, 50, 100, 56, 101, 50, 51, 54, 100, 55, 101, 54, 49, 55, 49, 52, 49, 55, 100, 54, 99, 53, 56, 53, 55, 57, 102, 100, 98, 54, 57, 101, 56, 50, 101, 52, 55, 55, 53, 101, 54, 51, 99, 53, 101, 57, 50, 57, 56, 57, 98, 97, 98, 50, 49, 55, 55, 49, 57, 57, 99, 56, 100, 98, 32, 99, 56, 98, 32, 99, 51, 102, 49, 97, 99, 52, 32, 52, 32, 57, 100, 55, 57, 50, 102, 56, 32, 54, 53, 49, 101, 51, 56, 101, 56, 98, 49, 49, 55, 100, 52, 57, 49, 51, 97, 54, 57, 52, 32, 55, 57, 98, 98, 50, 98, 100, 49, 49, 102, 100, 52, 55, 101, 99, 57, 56, 51, 101, 32, 100, 52, 98, 55, 99, 57, 99, 101, 48, 97, 57, 99, 99, 32, 48, 52, 98, 101, 100, 32, 97, 56, 102, 102, 48, 102, 97, 54, 101, 32, 50, 102, 50, 57, 49, 54, 51, 51, 49, 97, 99, 51, 98, 32, 98, 56, 54, 51, 49, 99, 102, 52, 55, 57, 99, 101, 53, 32, 101, 32, 52, 57, 49, 32, 53, 100, 56, 50, 50, 54, 48, 57, 99, 102, 49, 57, 101, 32, 97, 101, 102, 53, 51, 56, 97, 50, 97, 56, 100, 98, 54, 51, 49, 53, 97, 55, 102, 54, 97, 50, 54, 102, 53, 53, 102, 49, 100, 51, 57, 98, 98, 49, 48, 101, 52, 97, 56, 100, 56, 56, 50, 55, 49, 49, 102, 32, 53, 99, 100, 55, 54, 56, 98, 56, 53, 56, 98, 50, 101, 51, 97, 49, 102, 53, 48, 51, 49, 56, 56, 102, 51, 53, 51, 56, 52, 52, 100, 56, 98, 49, 54, 100, 51, 32, 102, 50, 97, 56, 102, 32, 49, 99, 57, 102, 52, 97, 55, 56, 97, 51, 99, 101, 53, 101, 54, 53, 98, 49, 100, 99, 102, 99, 99, 51, 102, 97, 100, 101, 50, 56, 49, 32, 51, 50, 99, 49, 48, 50, 49, 55, 57, 54, 100, 99, 102, 98, 100, 99, 54, 55, 52, 102, 52, 97, 56, 54, 52, 52, 100, 32, 57, 53, 97, 51, 49, 56, 99, 54, 48, 49, 57, 101, 98, 101, 55, 53, 48, 49, 56, 52, 49, 99, 99, 50, 52, 56, 100, 32, 51, 101, 97, 97, 100, 102, 52, 50, 50, 100, 99, 50, 98, 102, 56, 51, 98, 100, 49, 51, 101, 99, 98, 53, 55, 98, 100, 102, 56, 98, 54, 52, 54, 32, 51, 49, 56, 97, 50, 49, 51, 101, 99, 52, 54, 98, 54, 99, 102, 56, 98, 98, 51, 98, 54, 102, 51, 53, 100, 53, 101, 57, 53, 55, 48, 56, 98, 54, 51, 55, 55, 55, 99, 102, 56, 32, 53, 56, 102, 102, 51, 52, 98, 102, 100, 100, 53, 99, 56, 55, 97, 55, 55, 54, 55, 102, 97, 54, 99, 49, 98, 55, 97, 51, 50, 32, 101, 52, 97, 99, 48, 53, 51, 97, 98, 57, 100, 32, 57, 54, 98, 55, 100, 97, 102, 101, 99, 102, 57, 50, 57, 99, 100, 49, 57, 50, 98, 98, 57, 49, 98, 99, 52, 32, 102, 55, 102, 100, 100, 102, 52, 57, 101, 98, 56, 53, 49, 49, 53, 100, 97, 98, 99, 51, 101, 50, 99, 98, 51, 50, 48, 51, 97, 54, 48, 56, 54, 98, 100, 57, 56, 98, 99, 57, 55, 56, 56, 100, 55, 54, 49, 98, 55, 56, 50, 99, 101, 53, 99, 49, 97, 55, 100, 32, 53, 32, 97, 53, 55, 54, 98, 32, 50, 32, 48, 55, 99, 54, 48, 102, 56, 56, 97, 102, 53, 51, 48, 50, 53, 55, 54, 52, 53, 55, 50, 49, 100, 102, 54, 51, 99, 97, 52, 102, 51, 54, 99, 53, 57, 99, 97, 97, 53, 56, 97, 52, 52, 101, 100, 101, 56, 102, 99, 52, 50, 57, 48, 50, 51, 51, 97, 49, 51, 97, 51, 49, 99, 52, 97, 51, 97, 55, 52, 97, 55, 102, 97, 53, 100, 50, 48, 55, 55, 32, 53, 98, 51, 98, 56, 97, 102, 51, 49, 98, 102, 53, 54, 101, 98, 51, 48, 57, 98, 52, 53, 52, 49, 49, 55, 53, 102, 100, 53, 57, 48, 100, 56, 51, 49, 53, 100, 50, 102, 99, 48, 99, 97, 53, 57, 57, 102, 49, 56, 49, 50, 101, 101, 50, 102, 54, 102, 53, 51, 57, 97, 53, 53, 51, 100, 56, 56, 102, 97, 53, 99, 100, 101, 32, 54, 57, 99, 51, 55, 53, 51, 99, 50, 54, 50, 51, 102, 54, 49, 51, 52, 52, 50, 51, 100, 51, 100, 98, 102, 50, 51]
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101ef806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b792d7678114610045575b600080fd5b34801561005157600080fd5b506101036004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060208101359060400135610115565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b6020831061014c5780518252601f19909201916020918201910161012d565b6001836020036101000a038019825116818451168082178552505050505050905001848152602001838152602001828152602001945050505050602060405180830381855afa1580156101a3573d6000803e3d6000fd5b5050506040513d60208110156101b857600080fd5b5051959450505050505600a165627a7a723058203d17ab3b070505200d79a9487ee32e108f68b2f79c967927fa6305f9df49c2d30029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101ef806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b792d7678114610045575b600080fd5b34801561005157600080fd5b506101036004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060208101359060400135610115565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b6020831061014c5780518252601f19909201916020918201910161012d565b6001836020036101000a038019825116818451168082178552505050505050905001848152602001838152602001828152602001945050505050602060405180830381855afa1580156101a3573d6000803e3d6000fd5b5050506040513d60208110156101b857600080fd5b5051959450505050505600a165627a7a723058203d17ab3b070505200d79a9487ee32e108f68b2f79c967927fa6305f9df49c2d30029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x55ae9e66c9a4f4089433e77d2ba56e22d87ce109")
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
proof = [32, 52, 99, 100, 55, 99, 56, 54, 101, 56, 100, 101, 98, 54, 98, 97, 53, 56, 52, 101, 53, 98, 56, 48, 100, 50, 53, 52, 51, 55, 100, 52, 56, 56, 98, 53, 57, 53, 101, 102, 99, 55, 101, 97, 32, 98, 53, 98, 51, 53, 57, 53, 57, 97, 32, 100, 55, 49, 101, 50, 102, 51, 51, 57, 50, 100, 54, 49, 55, 56, 50, 100, 51, 53, 99, 102, 102, 50, 100, 98, 51, 100, 57, 57, 51, 48, 97, 54, 32, 54, 53, 50, 50, 48, 57, 97, 55, 56, 100, 52, 97, 54, 100, 98, 52, 54, 97, 52, 57, 56, 52, 55, 101, 54, 56, 57, 50, 101, 56, 54, 32, 98, 101, 99, 51, 49, 99, 50, 49, 54, 55, 49, 100, 53, 53, 56, 99, 101, 97, 57, 54, 54, 49, 49, 32, 100, 54, 56, 100, 52, 102, 52, 53, 100, 54, 54, 99, 98, 49, 55, 56, 57, 49, 100, 56, 102, 102, 51, 51, 98, 57, 102, 56, 101, 32, 100, 101, 50, 32, 98, 49, 99, 97, 55, 101, 51, 100, 102, 99, 50, 98, 53, 32, 53, 99, 100, 55, 55, 49, 55, 98, 50, 101, 51, 54, 101, 32, 52, 32, 54, 98, 102, 52, 100, 50, 97, 32, 49, 32, 99, 52, 100, 56, 50, 98, 48, 97, 54, 32, 52, 50, 54, 97, 50, 56, 100, 100, 99, 97, 52, 49, 55, 55, 48, 49, 100, 100, 56, 101, 49, 54, 49, 51, 51, 49, 54, 32, 57, 52, 56, 57, 101, 32, 102, 53, 57, 100, 99, 50, 97, 53, 99, 57, 55, 56, 57, 52, 50, 32, 97, 52, 50, 54, 51, 53, 56, 53, 56, 100, 57, 101, 101, 102, 98, 101, 54, 51, 48, 32, 52, 57, 98, 52, 57, 55, 98, 51, 97, 32, 100, 57, 102, 54, 49, 102, 53, 53, 57, 99, 102, 50, 97, 98, 100, 97, 57, 102, 54, 102, 57, 55, 49, 97, 54, 53, 99, 101, 50, 100, 48, 57, 99, 54, 57, 100, 52, 55, 52, 56, 101, 102, 56, 51, 49, 102, 55, 55, 51, 55, 53, 101, 97, 102, 54, 101, 53, 32, 55, 54, 50, 56, 52, 32, 53, 101, 56, 54, 52, 52, 57, 100, 56, 55, 102, 32, 51, 49, 99, 51, 97, 98, 98, 51, 100, 98, 101, 32, 98, 100, 101, 102, 57, 97, 51, 50, 50, 100, 50, 52, 52, 56, 97, 52, 48, 49, 100, 98, 51, 57, 50, 56, 51, 50, 50, 53, 55, 99, 100, 52, 99, 32, 53, 32, 97, 100, 56, 32, 98, 52, 100, 55, 102, 57, 99, 99, 99, 51, 55, 49, 53, 100, 97, 97, 50, 54, 55, 53, 51, 51, 102, 55, 49, 97, 49, 50, 51, 101, 57, 53, 100, 97, 57, 53, 51, 102, 97, 54, 49, 53, 57, 50, 56, 97, 56, 97, 55, 101, 102, 100, 98, 32, 57, 102, 52, 51, 54, 102, 56, 51, 100, 98, 100, 51, 101, 101, 97, 53, 49, 97, 49, 49, 97, 50, 99, 49, 48, 52, 50, 32, 97, 54, 52, 56, 102, 49, 101, 99, 52, 101, 98, 56, 50, 54, 102, 56, 51, 97, 98, 53, 100, 57, 48, 32, 102, 98, 100, 55, 52, 57, 101, 32, 98, 55, 52, 51, 57, 50, 51, 102, 97, 32, 99, 57, 56, 49, 101, 51, 54, 51, 98, 101, 56, 100, 54, 99, 50, 50, 57, 102, 48, 54, 52, 102, 52, 54, 99, 102, 99, 102, 101, 51, 100, 51, 54, 102, 52, 98, 57, 101, 98, 55, 52, 53, 56, 100, 55, 56, 51, 102, 99, 52, 57, 99, 102, 49, 100, 51, 97, 53, 100, 54, 101, 52, 49, 54, 50, 101, 52, 52, 102, 54, 99, 55, 57, 32, 100, 51, 49, 57, 53, 50, 53, 100, 55, 49, 101, 32, 99, 56, 51, 101, 52, 55, 51, 56, 101, 32, 48, 51, 49, 56, 97, 53, 49, 50, 49, 56, 98, 50, 55, 50, 102, 50, 51, 49, 48, 54, 48, 49, 100, 52, 48, 56, 52, 52, 55, 32, 50, 50, 50, 32, 53, 57, 99, 55, 48, 99, 50, 100, 49, 49, 50, 57, 51, 50, 49, 32, 99, 54, 49, 56, 51, 53, 55, 98, 101, 101, 57, 101, 100, 52, 56, 102, 53, 52, 49, 99, 50, 50, 54, 50, 98, 54, 56, 55, 52, 97, 50, 56, 50, 53, 51, 52, 55, 102, 52, 97, 100, 102, 100, 55, 52, 54, 57, 32, 102, 97, 54, 101, 57, 99, 49, 98, 49, 100, 99, 55, 51, 50, 53, 97, 55, 102, 57, 54, 52, 56, 102, 52, 99, 56, 48, 32, 101, 98, 97, 51, 54, 56, 101, 97, 98, 99, 49, 55, 50, 54, 48, 52, 53, 49, 57, 52, 52, 99, 57, 100, 51, 99, 55, 49, 54, 56, 102, 53, 56, 54, 49, 102, 54, 56, 53, 49, 49, 49, 101, 101, 98, 102, 98, 55, 50, 32, 100, 55, 100, 102, 97, 52, 56, 100, 99, 32, 49, 53, 52, 53, 54, 50, 102, 99, 99, 102, 54, 49, 51, 32, 56, 100, 98, 57, 55, 97, 50, 56, 99, 97, 101, 56, 100, 53, 50, 50, 52, 97, 57, 100, 50, 97, 48, 54, 51, 55, 49, 32, 98, 99, 49, 98, 54, 102, 53, 56, 56, 55, 99, 49, 51, 97, 49, 97, 50, 99, 49, 56, 102, 49, 50, 53, 51, 101, 51, 52, 57, 102, 49, 50, 97, 102, 51, 32, 49, 98, 55, 99, 51, 55, 55, 57, 49, 51, 102, 102, 101, 100, 99, 101, 48, 100, 52, 54, 97, 102, 49, 102, 55, 97, 102, 51, 49, 53, 49, 102, 54, 51, 56, 97, 57, 100, 50, 49, 48, 51, 56, 99, 98, 52, 55, 51, 53, 98, 54, 50, 99, 57, 98, 49, 49, 54, 53, 100, 57, 52, 49, 100, 55, 98, 53, 99, 56, 32, 55, 56, 98, 57, 99, 51, 100, 55, 98, 97, 50, 101, 98, 102, 48, 102, 48, 32, 51, 97, 49, 49, 56, 32, 97, 102, 57, 51, 54, 52, 53, 102, 56, 32, 48, 56, 54, 55, 51, 52, 53, 54, 101, 57, 56, 57, 102, 53, 54, 49, 102, 57, 97, 101, 99, 51, 52, 56, 50, 49, 51, 57, 49, 51, 56, 51, 56, 55, 102, 57, 53, 102, 49, 52, 54, 54, 49, 53, 100, 97, 53, 102, 99, 50, 48, 98, 53, 100, 54, 50, 49, 32, 53, 99, 57, 97, 99, 49, 50, 53, 102, 52, 101, 52, 49, 56, 54, 53, 98, 100, 102, 52, 101, 50, 54, 52, 54, 49, 51, 56, 98, 54, 50, 53, 54, 57, 50, 51, 57, 32, 101, 101, 56, 52, 50, 97, 53, 53, 97, 51, 48, 97, 98, 102, 56, 32, 99, 101, 56, 102, 52, 56, 52, 56, 56, 99, 51, 57, 100, 102, 54]
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = [49, 99, 57, 97, 98, 54, 57, 50, 49, 52, 51, 52, 56, 54, 102, 99, 53, 48, 51, 55, 99, 48, 53, 51, 52, 52, 101, 100, 98, 56, 101, 50, 56, 48, 101, 54, 57, 54, 50, 52, 100, 101, 57, 48, 55, 98, 100, 50, 52, 102, 53, 48, 102, 53, 100, 48, 53, 51, 57, 100, 52, 102, 100, 54, 32, 54, 100, 98, 55, 101, 97, 49, 49, 97, 54, 57, 50, 53, 57, 57, 51, 48, 54, 51, 50, 97, 57, 51, 101, 52, 97, 51, 98, 102, 100, 99, 57, 50, 102, 98, 100, 48, 52, 101, 101, 53, 100, 49, 99, 52, 54, 102, 52, 57, 52, 100, 53, 99, 49, 101, 56, 98, 97, 101, 32, 101, 50, 52, 32, 48, 56, 56, 100, 52, 49, 52, 102, 97, 50, 50, 102, 50, 52, 56, 51, 51, 32, 101, 100, 98, 53, 52, 99, 53, 97, 101, 49, 98, 53, 55, 57, 48, 99, 99, 101, 100, 100, 51, 52, 98, 50, 57, 102, 54, 100, 52, 52, 55, 50, 101, 99, 98, 102, 101, 51, 98, 51, 102, 52, 57, 98, 54, 32, 97, 100, 53, 51, 51, 55, 57, 99, 102, 54, 50, 49, 50, 32, 100, 100, 101, 49, 101, 52, 54, 99, 54, 99, 53, 56, 98, 102, 52, 52, 51, 102, 99, 32, 97, 50, 98, 50, 54, 51, 100, 53, 101, 97, 98, 53, 97, 99, 53, 52, 50, 32, 51, 100, 100, 50, 54, 53, 98, 98, 49, 49, 49, 50, 97, 99, 98, 32, 102, 57, 99, 52, 99, 55, 57, 54, 100, 56, 51, 57, 51, 101, 53, 102, 53, 57, 55, 49, 52, 55, 53, 98, 54, 102, 49, 57, 98, 101, 51, 49, 56, 55, 97, 99, 55, 101, 97, 102, 97, 54, 99, 102, 98, 54, 51, 102, 51, 57, 48, 54, 53, 102, 98, 99, 98, 98, 97, 32, 99, 52, 53, 55, 53, 49, 98, 98, 99, 97, 55, 50, 102, 57, 53, 53, 101, 56, 101, 55, 53, 57, 57, 57, 51, 102, 52, 49, 52, 55, 99, 49, 56, 49, 99, 57, 52, 54, 49, 98, 50, 54, 48, 32, 101, 32, 53, 101, 55, 49, 55, 51, 98, 99, 55, 53, 54, 57, 52, 51, 52, 57, 57, 50, 51, 101, 53, 51, 55, 101, 54, 100, 101, 102, 56, 56, 49, 54, 55, 54, 97, 50, 97, 99, 56, 98, 97, 102, 51, 55, 98, 57, 53, 50, 101, 101, 54, 57, 55, 32, 98, 99, 49, 50, 49, 51, 99, 51, 101, 49, 99, 100, 51, 53, 100, 100, 99, 52, 51, 101, 56, 56, 100, 57, 54, 101, 52, 32, 51, 49, 51, 54, 55, 52, 55, 52, 52, 56, 99, 50, 48, 32, 53, 55, 52, 99, 49, 52, 98, 56, 50, 52, 54, 97, 98, 51, 101, 102, 49, 101, 52, 98, 48, 50, 48, 52, 54, 57, 102, 98, 100, 99, 48, 56, 52, 102, 98, 51, 98, 57, 52, 101, 102, 51, 100, 49, 101, 102, 97, 54, 56, 50, 97, 54, 51, 52, 48, 53, 53, 53, 102, 54, 51, 102, 52, 99, 52, 101, 98, 98, 48, 98, 52, 32, 56, 53, 101, 57, 49, 55, 56, 97, 51, 102, 51, 99, 56, 98, 52, 101, 102, 49, 57, 32, 52, 101, 101, 32, 102, 57, 98, 97, 98, 97, 53, 100, 52, 101, 97, 102, 100, 99, 101, 56, 97, 32, 101, 100, 98, 53, 101, 56, 53, 97, 48, 55, 56, 101, 50, 101, 52, 97, 97, 54, 52, 57, 97, 50, 99, 50, 97, 101, 102, 54, 100, 50, 55, 52, 97, 102, 52, 101, 99, 53, 53, 97, 56, 53, 53, 54, 56, 57, 52, 50, 51, 57, 55, 99, 102, 32, 53, 54, 51, 55, 100, 32, 52, 50, 49, 49, 97, 50, 51, 98, 52, 97, 100, 49, 101, 102, 100, 54, 51, 55, 53, 100, 57, 99, 99, 32, 100, 54, 51, 102, 48, 102, 50, 100, 102, 50, 55, 99, 57, 49, 50, 32, 101, 55, 99, 53, 52, 56, 55, 32, 50, 53, 49, 55, 49, 53, 52, 57, 52, 99, 50, 52, 53, 97, 52, 56, 53, 55, 50, 50, 52, 100, 48, 55, 57, 101, 100, 101, 49, 51, 57, 56, 49, 102, 56, 99, 97, 32, 97, 102, 56, 54, 56, 54, 99, 101, 51, 51, 55, 54, 56, 100, 50, 100, 98, 52, 50, 49, 50, 55, 97, 52, 54, 53, 56, 50, 98, 52, 55, 97, 99, 98, 51, 52, 101, 49, 101, 102, 56, 49, 100, 51, 52, 32, 55, 56, 49, 32, 99, 32, 51, 53, 98, 100, 100, 101, 53, 99, 101, 102, 49, 32, 57, 51, 53, 97, 48, 100, 101, 52, 54, 57, 56, 32, 48, 101, 53, 49, 56, 57, 55, 97, 50, 52, 98, 51, 101, 56, 52, 57, 55, 99, 52, 49, 98, 50, 98, 52, 54, 56, 98, 101, 51, 57, 100, 97, 50, 32, 49, 52, 101, 51, 54, 32, 50, 56, 100, 102, 52, 56, 54, 54, 97, 51, 99, 99, 50, 99, 100, 56, 54, 101, 99, 99, 55, 53, 99, 99, 48, 55, 98, 102, 50, 99, 57, 49, 99, 97, 97, 97, 101, 32, 53, 102, 54, 99, 54, 53, 99, 56, 52, 100, 56, 56, 97, 100, 57, 55, 102, 53, 56, 50, 57, 57, 51, 53, 102, 56, 53, 50, 99, 97, 50, 49, 50, 98, 98, 32, 52, 32, 99, 100, 54, 98, 54, 57, 50, 97, 51, 32, 57, 56, 57, 51, 52, 100, 57, 102, 51, 57, 102, 52, 54, 57, 57, 50, 100, 53, 56, 55, 56, 97, 51, 52, 56, 32, 49, 97, 53, 98, 55, 102, 53, 101, 50, 49, 57, 55, 50, 56, 49, 100, 101, 99, 56, 49, 51, 56, 50, 50, 97, 56, 57, 102, 101, 53, 53, 99, 50, 49, 57, 54, 56, 49, 53, 102, 49, 51, 51, 51, 55, 102, 100, 54, 52, 57, 102, 51, 55, 54, 100, 51, 99, 51, 48, 99, 51, 49, 98, 100, 102, 57, 98, 56, 49, 51, 101, 53, 48, 49, 98, 52, 49, 102, 50, 51, 53, 51, 49, 51, 51, 57, 49, 49, 100, 99, 99, 49, 52, 49, 98, 99, 57, 100, 99, 54, 57, 53, 49, 97, 52, 55, 57, 98, 97, 53, 54, 51, 54, 55, 101, 102, 51, 56, 102, 98, 101, 54, 57, 50, 57, 51, 55, 55, 50, 53, 56, 101, 57, 97, 55, 97, 56, 32, 100, 50, 99, 52, 52, 98, 101, 57, 54, 100, 102, 51, 99, 55, 51, 32, 49, 51, 99, 52, 51, 101, 57, 55, 48, 100, 48, 97, 99, 52, 97, 101, 55, 50, 51, 50, 54, 32, 54, 55, 54, 56, 98, 98, 102, 52, 57, 55, 51, 97, 49, 51, 100, 98, 55, 50, 51, 52, 48, 98, 51, 98, 48]
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
abi=[{"constant":false,"inputs":[],"name":"getPolicyIsValid","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},
{"constant":true,"inputs":[],"name":"policy","outputs":[{"name":"ID","type":"address"},{"name":"receiver","type":"address"},{"name":"signer","type":"address"},{"name":"signature","type":"bytes"},{"name":"hashSecData","type":"bytes32"},{"name":"hashCoefficient","type":"bytes32"},{"name":"premium","type":"uint32"},{"name":"proof","type":"bytes"},{"name":"isValid","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},
{"constant":false,"inputs":[],"name":"deduct","outputs":[{"name":"","type":"bool"}],"payable":true,"stateMutability":"payable","type":"function"},
{"constant":true,"inputs":[],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},
{"constant":false,"inputs":[],"name":"getHashCoefficient","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},
{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},
{"constant":false,"inputs":[],"name":"getPolicyID","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},
{"constant":false,"inputs":[],"name":"getHashSecData","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},
{"constant":false,"inputs":[{"name":"recvAddr","type":"address"},{"name":"sigAddr","type":"address"},{"name":"sig","type":"bytes"},{"name":"hashData","type":"bytes32"},{"name":"hashCoeff","type":"bytes32"},{"name":"result","type":"uint32"},{"name":"proofData","type":"bytes"}],"name":"initPolicy","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},
{"constant":false,"inputs":[],"name":"getProof","outputs":[{"name":"","type":"bytes"}],"payable":false,"stateMutability":"nonpayable","type":"function"},
{"constant":false,"inputs":[],"name":"fundDeposit","outputs":[{"name":"success","type":"bool"}],"payable":true,"stateMutability":"payable","type":"function"},
{"constant":false,"inputs":[],"name":"getSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},
{"constant":false,"inputs":[],"name":"getSignature","outputs":[{"name":"","type":"bytes"}],"payable":false,"stateMutability":"nonpayable","type":"function"},
{"constant":false,"inputs":[],"name":"getPolicyReceiver","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},
{"constant":false,"inputs":[],"name":"verifyProof","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},
{"constant":true,"inputs":[],"name":"getContractAddrees","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},
{"constant":false,"inputs":[],"name":"getPremium","outputs":[{"name":"","type":"uint32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},
{"constant":true,"inputs":[],"name":"locked","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},
{"constant":true,"inputs":[{"name":"addr","type":"address"}],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},
{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"},
{"payable":true,"stateMutability":"payable","type":"fallback"},
{"anonymous":false,"inputs":[{"indexed":false,"name":"_from","type":"address"},{"indexed":false,"name":"_amount","type":"uint256"}],"name":"Deposit","type":"event"},
{"anonymous":false,"inputs":[{"indexed":false,"name":"_to","type":"address"},{"indexed":false,"name":"_amount","type":"uint256"}],"name":"Deduct","type":"event"}]
sample=eth.contract(abi)
SampleHEX="0x608060405260008054600160a060020a03191633179055600a805460ff19169055610e518061002f6000396000f3006080604052600436106101065763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663037e687081146101085780630505c8c9146101315780630d15754a1461029b57806312065fe0146102a357806332297b59146102ca57806341c0e1b5146102df57806349e22757146102f457806351eb118c1461032557806353be36dc1461033a5780635c5d625e146104985780636caa736b146105225780637ac3c02f1461052a5780638a4e37691461053f5780639128b1d414610554578063963d263714610569578063c3b067471461057e578063c974402914610593578063cf309012146105c1578063f8b2cb4f146105d6575b005b34801561011457600080fd5b5061011d610609565b604080519115158252519081900360200190f35b34801561013d57600080fd5b50610146610613565b604051808a600160a060020a0316600160a060020a0316815260200189600160a060020a0316600160a060020a0316815260200188600160a060020a0316600160a060020a03168152602001806020018781526020018681526020018563ffffffff1663ffffffff1681526020018060200184151515158152602001838103835289818151815260200191508051906020019080838360005b838110156101f75781810151838201526020016101df565b50505050905090810190601f1680156102245780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b8381101561025757818101518382015260200161023f565b50505050905090810190601f1680156102845780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b61011d610774565b3480156102af57600080fd5b506102b861087b565b60408051918252519081900360200190f35b3480156102d657600080fd5b506102b8610880565b3480156102eb57600080fd5b50610106610886565b34801561030057600080fd5b506103096108a0565b60408051600160a060020a039092168252519081900360200190f35b34801561033157600080fd5b506102b86108af565b610106600480360360e081101561035057600080fd5b600160a060020a03823581169260208101359091169181019060608101604082013564010000000081111561038457600080fd5b82018360208201111561039657600080fd5b803590602001918460018302840111640100000000831117156103b857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929584359560208601359563ffffffff6040820135169550919350915060808101906060013564010000000081111561042357600080fd5b82018360208201111561043557600080fd5b8035906020019184600183028401116401000000008311171561045757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506108b5945050505050565b3480156104a457600080fd5b506104ad610971565b6040805160208082528351818301528351919283929083019185019080838360005b838110156104e75781810151838201526020016104cf565b50505050905090810190601f1680156105145780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61011d610a07565b34801561053657600080fd5b50610309610a8f565b34801561054b57600080fd5b506104ad610a9e565b34801561056057600080fd5b50610309610aff565b34801561057557600080fd5b5061011d610b0e565b34801561058a57600080fd5b50610309610caf565b34801561059f57600080fd5b506105a8610cb3565b6040805163ffffffff9092168252519081900360200190f35b3480156105cd57600080fd5b5061011d610cbf565b3480156105e257600080fd5b506102b8600480360360208110156105f957600080fd5b5035600160a060020a0316610cc8565b60095460ff165b90565b600180546002805460035460048054604080516020601f600019858c1615610100020190941697909704928301879004870281018701909152818152600160a060020a03968716979487169693909316948301828280156106b55780601f1061068a576101008083540402835291602001916106b5565b820191906000526020600020905b81548152906001019060200180831161069857829003601f168201915b505050600484015460058501546006860154600787018054604080516020601f600260001960018716156101000201909516949094049384018190048102820181019092528281529899959894975063ffffffff909316955090918301828280156107615780601f1061073657610100808354040283529160200191610761565b820191906000526020600020905b81548152906001019060200180831161074457829003601f168201915b5050506008909301549192505060ff1689565b600254600090600160a060020a0316331461078e57600080fd5b610796610b0e565b15156001146107a457600080fd5b60075460009063ffffffff166107b861087b565b10156107d057506009805460ff191690556000610876565b600254600754604051600160a060020a039092169163ffffffff90911680156108fc02916000818181858888f19350505050158015610813573d6000803e3d6000fd5b5060025460075460408051600160a060020a03909316835263ffffffff909116602083015280517fefd23a1061f3426c48cf95d7306f812c2662ae895850e0591517a06798347dfe9281900390910190a1506009805460ff191660019081179091555b905090565b303190565b60065490565b600054600160a060020a0316331461089d57600080fd5b33ff5b600154600160a060020a031690565b60055490565b600054600160a060020a031633146108cc57600080fd5b60005460018054600160a060020a0392831673ffffffffffffffffffffffffffffffffffffffff19918216179091556002805482168a841617905560038054909116918816919091179055845161092a906004906020880190610d8d565b50600584905560068390556007805463ffffffff191663ffffffff8416179055805161095d906008906020840190610d8d565b50506009805460ff19169055505050505050565b60088054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109fd5780601f106109d2576101008083540402835291602001916109fd565b820191906000526020600020905b8154815290600101906020018083116109e057829003601f168201915b5050505050905090565b600254600090600160a060020a03163314610a2157600080fd5b6040805133815234602082015281517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c929181900390910190a160405130903480156108fc02916000818181858888f19350505050158015610a87573d6000803e3d6000fd5b506001905090565b600354600160a060020a031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109fd5780601f106109d2576101008083540402835291602001916109fd565b600254600160a060020a031690565b6003546005546004805460408051602060026101006001861615026000190190941693909304601f8101849004840282018401909252818152600095600160a060020a031694610bb994909391929091830182828015610baf5780601f10610b8457610100808354040283529160200191610baf565b820191906000526020600020905b815481529060010190602001808311610b9257829003601f168201915b5050505050610cd5565b600160a060020a031614610bcc57600080fd5b60055460065460075460405160088054600c9591949193919263ffffffff909216919081908690600260001960018316156101000201909116048015610c495780601f10610c27576101008083540402835291820191610c49565b820191906000526020600020905b815481529060010190602001808311610c35575b50508481526020018381526020018263ffffffff168152602001945050505050602060405180830381855afa158015610c86573d6000803e3d6000fd5b5050506040513d6020811015610c9b57600080fd5b5051600114610ca957600080fd5b50600190565b3090565b60075463ffffffff1690565b600a5460ff1681565b600160a060020a03163190565b600080600080610ce485610d5c565b92509250925060018684848460405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610d47573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b600080600083516041141515610d7157600080fd5b5050506020810151604082015160609092015160001a92909190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610dce57805160ff1916838001178555610dfb565b82800160010185558215610dfb579182015b82811115610dfb578251825591602001919060010190610de0565b50610e07929150610e0b565b5090565b61061091905b80821115610e075760008155600101610e115600a165627a7a72305820a459ecc6fc234a3b40e469634719c9e84c299c669fbd9405a532e8bd01c70efb0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x7687ab165ea8c129a439c7a0563ab6ee7bc6452e")
abi=[{"constant":false,"inputs":[],"name":"getPolicyIsValid","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"policy","outputs":[{"name":"ID","type":"address"},{"name":"receiver","type":"address"},{"name":"signer","type":"address"},{"name":"signature","type":"bytes"},{"name":"hashSecData","type":"bytes32"},{"name":"hashCoefficient","type":"bytes32"},{"name":"premium","type":"uint32"},{"name":"proof","type":"bytes"},{"name":"isValid","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"deduct","outputs":[{"name":"","type":"bool"}],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"getHashCoefficient","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"getPolicyID","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"getHashSecData","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"recvAddr","type":"address"},{"name":"sigAddr","type":"address"},{"name":"sig","type":"bytes"},{"name":"hashData","type":"bytes32"},{"name":"hashCoeff","type":"bytes32"},{"name":"result","type":"uint32"},{"name":"proofData","type":"bytes"}],"name":"initPolicy","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[],"name":"getProof","outputs":[{"name":"","type":"bytes"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"fundDeposit","outputs":[{"name":"success","type":"bool"}],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[],"name":"getSigner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"getSignature","outputs":[{"name":"","type":"bytes"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"getPolicyReceiver","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"verifyProof","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getContractAddrees","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"getPremium","outputs":[{"name":"","type":"uint32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"locked","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"addr","type":"address"}],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":true,"stateMutability":"payable","type":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_from","type":"address"},{"indexed":false,"name":"_amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_to","type":"address"},{"indexed":false,"name":"_amount","type":"uint256"}],"name":"Deduct","type":"event"}]
sample=eth.contract(abi)
SampleHEX="0x608060405260008054600160a060020a03191633179055600a805460ff19169055610e518061002f6000396000f3006080604052600436106101065763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663037e687081146101085780630505c8c9146101315780630d15754a1461029b57806312065fe0146102a357806332297b59146102ca57806341c0e1b5146102df57806349e22757146102f457806351eb118c1461032557806353be36dc1461033a5780635c5d625e146104985780636caa736b146105225780637ac3c02f1461052a5780638a4e37691461053f5780639128b1d414610554578063963d263714610569578063c3b067471461057e578063c974402914610593578063cf309012146105c1578063f8b2cb4f146105d6575b005b34801561011457600080fd5b5061011d610609565b604080519115158252519081900360200190f35b34801561013d57600080fd5b50610146610613565b604051808a600160a060020a0316600160a060020a0316815260200189600160a060020a0316600160a060020a0316815260200188600160a060020a0316600160a060020a03168152602001806020018781526020018681526020018563ffffffff1663ffffffff1681526020018060200184151515158152602001838103835289818151815260200191508051906020019080838360005b838110156101f75781810151838201526020016101df565b50505050905090810190601f1680156102245780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b8381101561025757818101518382015260200161023f565b50505050905090810190601f1680156102845780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b61011d610774565b3480156102af57600080fd5b506102b861087b565b60408051918252519081900360200190f35b3480156102d657600080fd5b506102b8610880565b3480156102eb57600080fd5b50610106610886565b34801561030057600080fd5b506103096108a0565b60408051600160a060020a039092168252519081900360200190f35b34801561033157600080fd5b506102b86108af565b610106600480360360e081101561035057600080fd5b600160a060020a03823581169260208101359091169181019060608101604082013564010000000081111561038457600080fd5b82018360208201111561039657600080fd5b803590602001918460018302840111640100000000831117156103b857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929584359560208601359563ffffffff6040820135169550919350915060808101906060013564010000000081111561042357600080fd5b82018360208201111561043557600080fd5b8035906020019184600183028401116401000000008311171561045757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506108b5945050505050565b3480156104a457600080fd5b506104ad610971565b6040805160208082528351818301528351919283929083019185019080838360005b838110156104e75781810151838201526020016104cf565b50505050905090810190601f1680156105145780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61011d610a07565b34801561053657600080fd5b50610309610a8f565b34801561054b57600080fd5b506104ad610a9e565b34801561056057600080fd5b50610309610aff565b34801561057557600080fd5b5061011d610b0e565b34801561058a57600080fd5b50610309610caf565b34801561059f57600080fd5b506105a8610cb3565b6040805163ffffffff9092168252519081900360200190f35b3480156105cd57600080fd5b5061011d610cbf565b3480156105e257600080fd5b506102b8600480360360208110156105f957600080fd5b5035600160a060020a0316610cc8565b60095460ff165b90565b600180546002805460035460048054604080516020601f600019858c1615610100020190941697909704928301879004870281018701909152818152600160a060020a03968716979487169693909316948301828280156106b55780601f1061068a576101008083540402835291602001916106b5565b820191906000526020600020905b81548152906001019060200180831161069857829003601f168201915b505050600484015460058501546006860154600787018054604080516020601f600260001960018716156101000201909516949094049384018190048102820181019092528281529899959894975063ffffffff909316955090918301828280156107615780601f1061073657610100808354040283529160200191610761565b820191906000526020600020905b81548152906001019060200180831161074457829003601f168201915b5050506008909301549192505060ff1689565b600254600090600160a060020a0316331461078e57600080fd5b610796610b0e565b15156001146107a457600080fd5b60075460009063ffffffff166107b861087b565b10156107d057506009805460ff191690556000610876565b600254600754604051600160a060020a039092169163ffffffff90911680156108fc02916000818181858888f19350505050158015610813573d6000803e3d6000fd5b5060025460075460408051600160a060020a03909316835263ffffffff909116602083015280517fefd23a1061f3426c48cf95d7306f812c2662ae895850e0591517a06798347dfe9281900390910190a1506009805460ff191660019081179091555b905090565b303190565b60065490565b600054600160a060020a0316331461089d57600080fd5b33ff5b600154600160a060020a031690565b60055490565b600054600160a060020a031633146108cc57600080fd5b60005460018054600160a060020a0392831673ffffffffffffffffffffffffffffffffffffffff19918216179091556002805482168a841617905560038054909116918816919091179055845161092a906004906020880190610d8d565b50600584905560068390556007805463ffffffff191663ffffffff8416179055805161095d906008906020840190610d8d565b50506009805460ff19169055505050505050565b60088054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109fd5780601f106109d2576101008083540402835291602001916109fd565b820191906000526020600020905b8154815290600101906020018083116109e057829003601f168201915b5050505050905090565b600254600090600160a060020a03163314610a2157600080fd5b6040805133815234602082015281517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c929181900390910190a160405130903480156108fc02916000818181858888f19350505050158015610a87573d6000803e3d6000fd5b506001905090565b600354600160a060020a031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109fd5780601f106109d2576101008083540402835291602001916109fd565b600254600160a060020a031690565b6003546005546004805460408051602060026101006001861615026000190190941693909304601f8101849004840282018401909252818152600095600160a060020a031694610bb994909391929091830182828015610baf5780601f10610b8457610100808354040283529160200191610baf565b820191906000526020600020905b815481529060010190602001808311610b9257829003601f168201915b5050505050610cd5565b600160a060020a031614610bcc57600080fd5b60055460065460075460405160088054600c9591949193919263ffffffff909216919081908690600260001960018316156101000201909116048015610c495780601f10610c27576101008083540402835291820191610c49565b820191906000526020600020905b815481529060010190602001808311610c35575b50508481526020018381526020018263ffffffff168152602001945050505050602060405180830381855afa158015610c86573d6000803e3d6000fd5b5050506040513d6020811015610c9b57600080fd5b5051600114610ca957600080fd5b50600190565b3090565b60075463ffffffff1690565b600a5460ff1681565b600160a060020a03163190565b600080600080610ce485610d5c565b92509250925060018684848460405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610d47573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b600080600083516041141515610d7157600080fd5b5050506020810151604082015160609092015160001a92909190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610dce57805160ff1916838001178555610dfb565b82800160010185558215610dfb579182015b82811115610dfb578251825591602001919060010190610de0565b50610e07929150610e0b565b5090565b61061091905b80821115610e075760008155600101610e115600a165627a7a72305820a459ecc6fc234a3b40e469634719c9e84c299c669fbd9405a532e8bd01c70efb0029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x1f1caeb0b85691274b305c0c5260a7c1040e5d6b")
eth.accounts
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101ef806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b792d7678114610045575b600080fd5b34801561005157600080fd5b506101036004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060208101359060400135610115565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b6020831061014c5780518252601f19909201916020918201910161012d565b6001836020036101000a038019825116818451168082178552505050505050905001848152602001838152602001828152602001945050505050602060405180830381855afa1580156101a3573d6000803e3d6000fd5b5050506040513d60208110156101b857600080fd5b5051959450505050505600a165627a7a723058203d17ab3b070505200d79a9487ee32e108f68b2f79c967927fa6305f9df49c2d30029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xad5003101dc4be402cc705496ca9732b96f489e4")
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101ef806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b792d7678114610045575b600080fd5b34801561005157600080fd5b506101036004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060208101359060400135610115565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b6020831061014c5780518252601f19909201916020918201910161012d565b6001836020036101000a038019825116818451168082178552505050505050905001848152602001838152602001828152602001945050505050602060405180830381855afa1580156101a3573d6000803e3d6000fd5b5050506040513d60208110156101b857600080fd5b5051959450505050505600a165627a7a723058203d17ab3b070505200d79a9487ee32e108f68b2f79c967927fa6305f9df49c2d30029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x6b9095f594e595e665f8131cbeafb18dcfc0b633")
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
proof = [49, 56, 102, 100, 102, 101, 55, 48, 56, 56, 51, 99, 102, 56, 32, 50, 51, 48, 54, 57, 54, 102, 55, 101, 51, 102, 97, 54, 97, 99, 52, 56, 55, 50, 98, 49, 100, 102, 55, 57, 101, 48, 98, 100, 102, 55, 49, 100, 98, 52, 32, 51, 56, 55, 102, 98, 102, 52, 97, 53, 52, 56, 55, 99, 50, 53, 99, 102, 53, 52, 102, 99, 57, 51, 57, 101, 53, 54, 51, 98, 101, 51, 99, 56, 57, 54, 54, 54, 50, 55, 32, 101, 50, 99, 50, 97, 99, 50, 57, 51, 55, 99, 52, 102, 32, 97, 102, 55, 53, 54, 97, 97, 52, 56, 53, 101, 98, 48, 53, 97, 49, 54, 97, 49, 98, 99, 101, 52, 50, 98, 32, 49, 53, 50, 101, 49, 99, 57, 102, 97, 100, 54, 53, 50, 98, 97, 52, 48, 57, 100, 99, 97, 102, 101, 50, 53, 55, 99, 56, 100, 54, 52, 56, 99, 56, 55, 57, 99, 100, 50, 55, 51, 56, 99, 32, 53, 55, 99, 57, 99, 52, 56, 53, 48, 102, 50, 54, 51, 102, 101, 49, 98, 32, 99, 52, 50, 101, 55, 56, 52, 32, 54, 55, 48, 32, 56, 98, 56, 50, 53, 56, 51, 53, 54, 100, 53, 52, 98, 100, 102, 100, 57, 51, 51, 99, 55, 57, 99, 53, 102, 54, 56, 32, 49, 97, 101, 51, 51, 100, 55, 97, 100, 49, 102, 101, 48, 97, 49, 49, 101, 100, 52, 53, 102, 102, 101, 49, 55, 97, 52, 102, 55, 53, 51, 101, 57, 99, 53, 56, 52, 100, 50, 98, 49, 51, 56, 55, 55, 56, 49, 102, 55, 102, 51, 100, 49, 100, 48, 52, 101, 56, 99, 98, 52, 101, 101, 101, 57, 32, 52, 99, 102, 51, 56, 99, 98, 54, 52, 50, 99, 102, 57, 32, 56, 52, 101, 52, 52, 100, 50, 49, 100, 100, 55, 57, 57, 97, 102, 55, 102, 102, 48, 50, 51, 50, 101, 102, 53, 102, 53, 101, 57, 101, 102, 99, 97, 97, 101, 102, 98, 52, 49, 102, 53, 52, 56, 98, 99, 98, 57, 98, 101, 57, 101, 52, 97, 99, 52, 53, 49, 55, 50, 32, 52, 55, 98, 50, 99, 100, 98, 51, 101, 50, 51, 50, 98, 102, 55, 56, 54, 53, 101, 54, 97, 102, 98, 56, 101, 32, 97, 50, 100, 49, 98, 51, 49, 101, 50, 54, 51, 57, 98, 54, 53, 99, 56, 99, 56, 53, 54, 98, 101, 98, 53, 50, 54, 98, 98, 50, 52, 50, 99, 49, 102, 56, 97, 100, 54, 51, 102, 52, 100, 49, 99, 97, 52, 56, 51, 32, 51, 53, 56, 55, 52, 32, 99, 50, 53, 99, 52, 57, 52, 52, 97, 51, 99, 50, 48, 51, 56, 55, 100, 56, 51, 102, 98, 32, 99, 50, 100, 97, 51, 54, 98, 32, 102, 98, 102, 50, 53, 56, 56, 53, 101, 49, 49, 53, 52, 99, 57, 53, 48, 50, 53, 97, 54, 100, 98, 53, 54, 98, 51, 50, 97, 98, 52, 55, 102, 53, 98, 53, 98, 32, 51, 102, 53, 51, 57, 52, 48, 99, 54, 53, 52, 49, 56, 50, 52, 32, 57, 102, 49, 53, 99, 56, 55, 98, 53, 54, 48, 55, 49, 51, 50, 55, 101, 52, 101, 102, 54, 102, 51, 100, 54, 53, 55, 97, 51, 32, 53, 100, 101, 56, 56, 97, 50, 50, 49, 101, 48, 56, 101, 56, 51, 53, 50, 100, 48, 49, 55, 51, 53, 49, 102, 32, 101, 99, 101, 56, 54, 32, 57, 99, 52, 49, 98, 102, 97, 99, 99, 100, 57, 53, 100, 52, 102, 32, 56, 97, 54, 32, 97, 97, 57, 53, 101, 53, 55, 100, 98, 53, 51, 52, 98, 54, 102, 100, 97, 55, 97, 50, 99, 99, 55, 50, 49, 50, 101, 101, 53, 57, 100, 53, 101, 98, 98, 100, 99, 101, 54, 50, 53, 52, 51, 99, 101, 50, 50, 99, 48, 55, 101, 57, 102, 56, 54, 57, 97, 32, 56, 52, 98, 56, 97, 101, 56, 55, 102, 100, 50, 51, 97, 99, 50, 32, 99, 55, 99, 102, 53, 49, 53, 54, 49, 50, 49, 100, 100, 52, 52, 102, 48, 52, 99, 55, 50, 54, 48, 49, 100, 51, 55, 102, 51, 99, 100, 56, 97, 56, 57, 53, 97, 51, 100, 49, 56, 97, 100, 55, 98, 54, 97, 49, 52, 100, 101, 53, 49, 51, 52, 99, 52, 49, 50, 55, 54, 50, 102, 55, 54, 99, 98, 99, 56, 32, 101, 56, 49, 32, 56, 49, 51, 57, 99, 32, 101, 97, 99, 102, 98, 57, 102, 32, 101, 102, 48, 100, 50, 100, 100, 50, 51, 97, 49, 101, 102, 97, 98, 99, 48, 102, 53, 50, 56, 53, 54, 101, 53, 97, 55, 32, 49, 51, 49, 54, 48, 57, 102, 53, 101, 51, 50, 101, 99, 49, 99, 57, 55, 57, 49, 98, 100, 50, 102, 55, 51, 32, 98, 57, 50, 99, 55, 57, 51, 49, 54, 54, 49, 55, 102, 50, 101, 54, 51, 99, 56, 100, 99, 55, 98, 56, 102, 51, 57, 50, 98, 32, 100, 98, 101, 52, 57, 53, 99, 101, 54, 99, 51, 50, 52, 51, 53, 101, 48, 101, 97, 99, 51, 52, 53, 99, 97, 57, 102, 50, 52, 49, 100, 51, 97, 57, 49, 56, 97, 52, 54, 98, 56, 49, 49, 53, 99, 50, 55, 98, 101, 98, 100, 57, 49, 100, 54, 56, 99, 57, 55, 97, 54, 99, 102, 52, 97, 99, 48, 54, 53, 98, 52, 51, 49, 50, 98, 98, 56, 100, 101, 49, 97, 49, 98, 100, 98, 57, 99, 56, 55, 53, 53, 101, 51, 32, 51, 100, 49, 50, 100, 57, 98, 57, 54, 32, 56, 100, 97, 98, 54, 50, 97, 49, 102, 98, 50, 102, 52, 53, 49, 56, 56, 49, 50, 102, 51, 101, 50, 51, 49, 102, 54, 49, 49, 99, 56, 32, 98, 57, 100, 50, 50, 51, 56, 99, 102, 98, 101, 54, 97, 55, 55, 51, 50, 57, 55, 97, 48, 50, 54, 99, 97, 101, 57, 54, 98, 55, 52, 100, 53, 50, 55, 50, 56, 49, 50, 102, 102, 53, 48, 56, 102, 97, 52, 50, 99, 51, 54, 32, 101, 102, 100, 51, 97, 97, 102, 98, 54, 102, 56, 98, 53, 51, 53, 55, 99, 51, 97, 52, 100, 32, 98, 100, 97, 32, 50, 98, 54, 55, 48, 32, 54, 50, 102, 97, 55, 99, 57, 57, 99, 50, 102, 101, 102, 55, 55, 101, 57, 99, 99, 54, 101, 99, 53, 55, 53, 53, 102, 97, 48, 99, 101, 53, 56, 52, 97, 102, 50, 52, 51, 49, 102, 101, 98, 50, 101, 32, 57, 57, 102, 54, 102, 98, 53, 54, 97, 52, 102, 52, 53, 99, 52, 98, 99, 54, 54]
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"coefficent_hash","type":"bytes32"},{"name":"result","type":"uint256"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506101ef806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663b792d7678114610045575b600080fd5b34801561005157600080fd5b506101036004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060208101359060400135610115565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b6020831061014c5780518252601f19909201916020918201910161012d565b6001836020036101000a038019825116818451168082178552505050505050905001848152602001838152602001828152602001945050505050602060405180830381855afa1580156101a3573d6000803e3d6000fd5b5050506040513d60208110156101b857600080fd5b5051959450505050505600a165627a7a723058203d17ab3b070505200d79a9487ee32e108f68b2f79c967927fa6305f9df49c2d30029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x079bf5272ec69aeeb31e2b6cb1ffef3460150189")
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
sample
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x306135343535613833636132316431306364336532393265303339323233313262633064333238383938633039623735393662366531383661373564373233363138623639313530326134323132333336393438383736393661363634306536633261656233623766663261373839646631613261343537636562326666313730313031353039393835633539373762396437396433363839393134643937363137616266616638316365323637636262353237616462343166373964613637326533346336346139336137393334393034646163653234653562636663316465383566313631303565303263343366353336336135623533643231346264303235643135373132646234663737323666336664356438366261306266363732323530326538313366326464643738653832626536383738656337323736383630383036633637623830643561616333636531666534366366633837626366336363343033343532663566383133626266633431613166386535636630353064303237396139316331613437316636393762616134356461333035396437376634393234326665323532653061303263303361336536646131356561663236313030366665363934343133363734643038613337636131383161666566363833333830633737386436333131646364383333663430633936313138313234633830613039656538313734656134353261353065653461643737373432306233313763306130616431373230653166666336613030303238333832346236383537323362623863323930613033336665636130366330313363353762333731353066653063653035383838323030303239386232316263623966613938633534313037343236633035646564303136623530623335323735613631393731373434636634366431346263303162323535633234346131383232656235346138373331313336303330353037316530633566656461356363613538636234366334366232386562616566643431373834313835366264313038313966313239313135313138393334353133666230383839383563626533646264636363643837363165623636663263383232333936333066346537663762316366643565303034343034663066346634623032653336333537636434376237613030386531303761313238633537346535386361633763366265663536346331633338663236343831376263656565386161623463663762663738313966363231646331353065316432356138333438313731623165396565636134623066343466383839313730303337636664323236373331633938346364366562303531316665646630626132393065366562373966646461376130636138323530306436393033313037643030633134306264613437643933333239353231623039653664333036306336313466366665353632373333373466343265623863646531613731373037376630383564393364643863656265353634373862353830613034336535313531343039366237323462633938663462356439393637366366313234356462333963"
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x306232623363666639643131343430356536623033626337323662646139363764643764666465333962623262653362666462626232633037643635393766323264343032663733333038383437303263333165393563393766383639363630303538666563643137636232613033303835613165313433636634393334396232353361306136386465616130616132343239336434626466376363613837626331613761643035643239323637333935383032303030303664323864323037316232303439636662346436313661653762306665646566643361346264303866306563313932323239396333653963386139366466613865626133633766373035323964656266326630373932613631616566363562396235643234633335623538366465646562323961333130663235326364663434356439633661323231383662616634373135623863303531656366353738313436326333333762303338316533336331623538623838316533633139316364636530656162363361303538613065613063373766643736633961373464356265373833366338303036316136626638383537623434396132386530306564336563656431393334633131306562323834363931303733303661326661633634353163613638333365393762646136393331663838356233336336373366613030393466366333373431363339623362626238623638663430323865636333333161333139313666393864376339313336376534326439363561353134313935323462333664356362326137333866666166353634666133373435303437303230626531373266646463333839323131666630653264373161646463366561393237623931356238383034393962396134663066303534396435643362316265306535636561383530663932383664386338633237333030383739383363313936633334383233613331383461616234666437316263653663626239613534333333366135303537343030346536313038643832666166376533373233643763303139613234333361306437326439346336306335663561633066383535363239386336376365623135303465353561363839663163663130343933626439373165613764313938363164323865636534653961666537393930653565346532623264663039636532393238303239393564343362663434633038343431636364383462313833666532396631613833313738616564343134663638623930666632646435316636633736353534373431376365336163353833326638353833633534386137353163313865613738666631306133356633636230313335663131376464383734666163356231653164373465393931353737363734346138613531666562613431613065656462636630373738303466376339613835323636383536366432386137643736343633363535663838393636333764663361363938373162396431656231356437336562633461393533383536343837353861666336653732303338666438646238396266346365343031613263623737323239353431646130366264"
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x323635666133333931623232326238366662353630353730363462636532383636363665346232666638393230646265336265356161393731626337326630303263303337303063623734653664643262333037613063663163616431373638393861336666653831323835383330386332313939663561383266396465386630616230316233366661313139653033626661353830646661343831303065613930616330303137656364613534336634316466393564396235373435653739303233373838653437633136363966316635333663346437646161393633343333636439306637663131636139623463613736633362343839316434393031633264393033393336373561643864323734333139386464383332393537343132623363336238373163626263656162343662393763316164393539663761353530643966313136643430326565356137626638303233396265353534623765653536623735393635643930383365396532633838393062393530353165346233326432356638623831313731623331363334306236303539303232646337316433633437303463363662653365313763363631333332393031383438343061393164343531666635313163663030663965316439316236623965643461343461373937326234396263643462383530343765363963393734356161643032656332346664333737356337353762373963623662653136373466613435376330633033353035303661366161333935393138346634636337353533333934346166313936323066643137323533623234636561393936646430653766623836623364313235643066636262323766616435303365336235333432663730396230663161323463303639353133663330316538346563323261636530303066643862326334616134323363333134326233623030353763613538663631616266316531346532653739353037393065343836633965333566613335666461373032313032653864636631343463656632613765376262643861303763363839343431316431646433643365353038646433613862353438653938363930643664613565363136656235343832346563616330356166383766326536626537373536313262303730386666336635313635626438656166373635633934326365393161343261663863386262343534323433623461373530363033613162373462383232396532616137336531666132366436653663353164613838633630346662616639633165323562303462376433373334663839663138343738376666326133323162613063613533363634393838323635626436336333313466376265613564373535326564396133376535333764663662613837613065643765393138333265366533623565393334613461316435633637346636396335646232633735646231396364313762643231646561393834366432333736656663393235643231393434613335303236303635616161363139663863656433333562316135343764336263343838666664386231363263353033306661323062616334616131"
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x323563393966386566613438393637616433393133326632613930633931656339333762303766636564323863313161376266643233306663336266303366613235633465666664386135323133373363353039393461613932323534656237306464353438306436303562363739613163376566366435643030316335393431316536326462303234313635323632323064313436653936383361626161306631346462623731626166633034643533336232386432666362616565303630313363626631386637313065313437346264313964393865616436373466636562383565313163643435653461336165373464383237353437356334363833663233376339636134343265346132383361613363613033356336306666306531373731366637306263613664383537303037346533383066346533313566323432663766363831326138336630643836623161386566653538663534353961626133303038323264656534656265316130383866383234616134643764626132326666373931636638333532303637623532386132633534613132316664643039656533363931313136306165313062363438303462633437373162343435633230663731333834653961373366316262643630303734373936613862316539343738396361313932363538653166336463306237663661646336356461613130363566666664376263323432323261623330643832643230353566343835313939306538626161373438333930356664663133303735613231356531343330306438373031376433623038393862663335383730356233646334623733633431633862663764646339326135636634326263373564383236393361383366653035663264623632633135326464353535356634666664393361653932313831396237613536373231643031326461623364613430653465373738626163643631393336623035356266393134346266616331623339636237383734333032626534326239613462353431656638376266633536646335353835613562336139316631323065613933396563666462613362373534353837333439656439613631336566393734643434356162653162646665303437343533613531313161323032343261633731396136383931626465303337646233356365633131376235636563633734373463313537626135623734653831623135613764363739313730343631613563373562356331373936366433383862643461313933643062353963643538383266333133383136376664626338353437353233373639393436326438326364323262636432313063323364646335363837363833313339656532333030373638353266363461616235633432323533336636323438346361653037623731376531653939333263636363343363343261306531353133633530643735333830656639336663613135373665396463373162666333623138386431356266323564313739333031366266363733666335336665623966396364666563326238396231393661663763646532313531663331333365666636326335"
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 7191
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
hashCoeff = "0xc0816d08102b10a3c32d6ff4107e6758cbcfceb0fe9266a70b917e0c5cae350f"
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2, 1]
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2]
admin.genProof(tupleData, dataCoeff)
proof = "0x316465656232613037383038363861313430393338336330393432316164616566623436383134643364373461383166373465646366616462306633306534613161666632653965313639656563306664333236396265343734326437353461653933313138303239333130666363336237613439616635396236656564326130616163643238633535363832366365656336343936643736333661306564343033663462363363643962313764666435643938656633613233636662616465303536663636383533613035653462306665313862653966656162616231313533363863383361333833646432343530643061313836653336303865646639363166386532333163636364393437326137643838346433653835613934653762653336653538616362616639316264653266636362306435323163353832653431616230636662363165323738663832386261306262633636616331346530613730303735306132383163376530306637363762366665353736366530356661323633393864663665656362663637383831353162613464396132373733343866363766623636343237393861653332643030316636313762383533373235343261663939613231626237313531316463663737316336323139313262653934313364356433643663326365363064346337313836643938353436653430336130316131616265393439666135323736383131313433396432623230323833383937346133646239623430306465366239393962626434356531353162366230313436623232653564646339663331366632393761303962396633373031303434643138646430373937633462653130303364666565653065333830623061313036323035323831313532333066393531303338373065303265333339333663616339386165356564346563313163376366643730383362333231356662343631353262633837363035333665313132373730393462646663393265636264663265333735643033313936363838653931386261303764363664663366303964313735303864633465313865336330303133376133633030633162313639363363346533306264333265633032323063393163306235386639623564313030653231633636333438656435616530343838623835663032663237393765383663396135643432633635626663323836633937623263313132346361663266313930316631343361363061396362636161323136663434633462376163646561393236386265333336616438663162306630383036366263353964336337316565323862623065363764633933393866303261363662646165353331323832633431646536656365333262333136653563356265646536306139616666386432363136326466643032613861373162363839666464643363316465376662343864313734313034346566366436383163656439313766333831386532373334356432383661643630613064383930663130316434643635646436306138616166326433376663653261633865336332633430663134613562663662666466306436"
premium = 2691
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x08050a0202"
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"result","type":"uint256"},{"name":"coefficent","type":"bytes"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506102b9806100206000396000f3006080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166343d66ff98114610045575b600080fd5b34801561005157600080fd5b5061018b6004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929584359560208601359591945092506060810191506040013564010000000081111561011657600080fd5b82018360208201111561012857600080fd5b8035906020019184600183028401116401000000008311171561014a57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061019d945050505050565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b602083106101d45780518252601f1990920191602091820191016101b5565b51815160209384036101000a600019018019909216911617905292018681528083018690528451604090910192850191508083835b602083106102285780518252601f199092019160209182019101610209565b6001836020036101000a038019825116818451168082178552505050505050905001945050505050602060405180830381855afa15801561026d573d6000803e3d6000fd5b5050506040513d602081101561028257600080fd5b5051959450505050505600a165627a7a72305820c543424d0ae8d05b1b9e8565d42fbe46ac3861ac632fba9f3a82b576f8774e310029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x05bdb31394ca1919dc238027b8e5f19d331412b5")
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
coeff = "0x0508050a0202"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2]
admin.genProof(tupleData, dataCoeff)
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"result","type":"uint256"},{"name":"coefficent","type":"bytes"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506102b9806100206000396000f3006080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166343d66ff98114610045575b600080fd5b34801561005157600080fd5b5061018b6004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929584359560208601359591945092506060810191506040013564010000000081111561011657600080fd5b82018360208201111561012857600080fd5b8035906020019184600183028401116401000000008311171561014a57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061019d945050505050565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b602083106101d45780518252601f1990920191602091820191016101b5565b51815160209384036101000a600019018019909216911617905292018681528083018690528451604090910192850191508083835b602083106102285780518252601f199092019160209182019101610209565b6001836020036101000a038019825116818451168082178552505050505050905001945050505050602060405180830381855afa15801561026d573d6000803e3d6000fd5b5050506040513d602081101561028257600080fd5b5051959450505050505600a165627a7a72305820c543424d0ae8d05b1b9e8565d42fbe46ac3861ac632fba9f3a82b576f8774e310029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xc83101eed64fa659a019eb62e5b17c496ea64910")
proof = "0x
premium = 2691
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0508050a0202"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
coeff = "0x0508050a0202"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2]
admin.genProof(tupleData, dataCoeff)
proof = "0x323964323139356330373030376534383432623938323132386332356137363161396533346236336432633366653632636538313565343639383236366263323162643466653662343935316432363966373763623139376635616533376231613336623866623063386239623233643238616563626139376637616239323130353839303961646233623731326336663130383864303333613366336666303537336634633064653230343233636664323261376264383031613039656363303961343937333262656461376237333330326237326662353831643738343163373134366265326263326135633962356133363531613333343432656535323231333539306637343536663432376432643533343934393962613131363666396264376435373734303763356164393463353239333264633866636335613332343632313332396437633531333037303335373935346665363439656237386133303232333563343835363861653365616162383430393835366666646137313532636332383838336536623234313232303362343130313463323566373861623361633633343535376338353665336234633066316434663736626534643031613361326362333166356463623230376563393764326561313930393264646663616163653031623637343732356634643039373534393061633464323730386265376162333833613836646636333466656237396366353933323261333139653837393035356332323334323431346334373635646366616563346236323039316666383434346266386261353734316239313962653339663561643262656237323734326263623534633466326231656166303731663935633966613134326334653234303732363930316163376335316133656164643233646435353236646339653462616663333038313862373936396166373232616636623530666531626633386239613065363931323361646535303236383831646333323463633431646336333666346537343762343932626461663662323536386330313139353163356263306266353530303234326266643362363932306162376333383431396535626130323636343238336135616261623864373664303935313232383332316366356230356563373737373137646134643166383666313436353038626539383633333365303032623638336463336662303732613539643530396362656438353836626364313838376131353165636262636464353463376565643164323439343334326562666533323833373239663063353137616336313736363035666230383536376437346564323831616164316265626630326463353766346266326439613333353839663636633637313135323534616566663133343762653237316463616666313763633730633638343231363830616438623531353130633665363239353439303262613238626632646661386231306632356437383365326239613130363363663534303166353936316239613665316363303330383263646239343966346638326335646431373562376465626261"
premium = 2691
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0508050a0202"
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"result","type":"uint256"},{"name":"coefficent","type":"bytes"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506102b9806100206000396000f3006080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166343d66ff98114610045575b600080fd5b34801561005157600080fd5b5061018b6004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929584359560208601359591945092506060810191506040013564010000000081111561011657600080fd5b82018360208201111561012857600080fd5b8035906020019184600183028401116401000000008311171561014a57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061019d945050505050565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b602083106101d45780518252601f1990920191602091820191016101b5565b51815160209384036101000a600019018019909216911617905292018681528083018690528451604090910192850191508083835b602083106102285780518252601f199092019160209182019101610209565b6001836020036101000a038019825116818451168082178552505050505050905001945050505050602060405180830381855afa15801561026d573d6000803e3d6000fd5b5050506040513d602081101561028257600080fd5b5051959450505050505600a165627a7a72305820c543424d0ae8d05b1b9e8565d42fbe46ac3861ac632fba9f3a82b576f8774e310029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xa4023026ae404ba9f47e6a4d5bcbdf2d615587df")
samplecontract.verifyProof.call(proof, hashData, hashCoeff, premium)
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 2691
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0508050a0202"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"result","type":"uint256"},{"name":"coefficent","type":"bytes"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506102b9806100206000396000f3006080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166343d66ff98114610045575b600080fd5b34801561005157600080fd5b5061018b6004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929584359560208601359591945092506060810191506040013564010000000081111561011657600080fd5b82018360208201111561012857600080fd5b8035906020019184600183028401116401000000008311171561014a57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061019d945050505050565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b602083106101d45780518252601f1990920191602091820191016101b5565b51815160209384036101000a600019018019909216911617905292018681528083018690528451604090910192850191508083835b602083106102285780518252601f199092019160209182019101610209565b6001836020036101000a038019825116818451168082178552505050505050905001945050505050602060405180830381855afa15801561026d573d6000803e3d6000fd5b5050506040513d602081101561028257600080fd5b5051959450505050505600a165627a7a72305820c543424d0ae8d05b1b9e8565d42fbe46ac3861ac632fba9f3a82b576f8774e310029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0xcf537fc752edd89be1d762338735fa262719f083")
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2]
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 2691
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0508050a0202"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 2691
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0508050a0202"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x323430626632303531386264363637393337393232303130373936343433653964333937613464666462306330633438366633613865653235636162393636313135393231663635353732663231363432653233623666636362386661316232653762623233663735366466343861616465326330626135633833616635326230353039396632353564633234306165396363303863623564663431303766313131663635343739623364386531306639343538376538646461383237623438313865333033613139376637393861613035616366663434653863623830393238613264373162393438356332333931633263616435343438353436306435613261633763653539366465613462343130656534666634643864356536373064656365366137376163393930393464383430383261366461323432373832303832353366353730356237643033636530376662646138313733636136393633616134636533623161376336656566396162336266666134306530373731363536303735336234383762636533653866636130333039643130626134336566316631643436373237396161326134393661613039623666623338623861663465623030626632383764303137313364353330613038386530396137653939643763353664646262613431303434646664636331343635316334613632613833626130336163613965343461613738626637383930373363366262653635353166386135653731643932643162623135356133303539366335303033363261653830313966376566376462323336663439303932383230653037363762336561336139643430333139343139306232323137623362623433366436613832643032653064376462653066653038396238316438383830346432633632343039323361613734343735373362343461393361396434656663663934303734323138343830616566643865623932316238666231313132666531616662663062343332316463623162386431303834643264363531373436323532396563373731303830303963303537616163663933396362376638353931336537626664326262366231336462386339613331396332383739376537326536613566396465636266373131336663313638633762303662613433623031643962663034396566623130326434383730366632623931613461356230363838343239666166356238343732643434616464353564353362303262653436383163313132323561656465313337343136303462313762613133653065616530323135356366373135363432316432636366343832323130643461343939316133303966663665666566623030333865353431353733303732303135663535363231653439323433653831343233373530333136303530336466386530326564643035613865666632346131386338653039393666303130646538373337363533366538666436616636353432383537373537313364366231663031343562656335316164643162613163393839376432343034316130653938653961633433396365346435316334326433"
premium = 2691
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0508050a0202"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 2691
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0508050a0202"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 2691
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0508050a0202"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 2691
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0508050a0202"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 2691
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0508050a0202"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 2691
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0508050a0202"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 2691
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0508050a0202"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 2691
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0508050a0202"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 2691
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0508050a0202"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 2691
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0508050a0202"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 2691
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0508050a0202"
true
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
tupleData = [80, 75, 115, 178, 85, 17, 148, 178, 17, 126, 39, 9, 34, 14, 66, 65, 203, 6, 191, 16, 141, 210, 73, 136, 65, 136, 152, 60, 117, 24, 101, 18]
dataCoeff = [8, 5, 10, 2, 2,1,2,3,4,5]
admin.genProof(tupleData, dataCoeff)
proof = "0x326563316335353331626237313930646434653964386566613032343361323636636165633135383064373661333463313033636564386236336638313433313164323539643030383233373635643632323134316432363730383030633365323533623865623664646632646635333036623534306266306138626661653631373634383261633536333831623236623562303661313433653462626234366565346663386361313466653064323630643062643035313761393738373261316532666266636565303637613934336133636130313339653766643532366438393861663138393035643931326566633565303363613336616161323738313262653461383861356330616535373036666265653364623839363434633031376434643730653863393433376564366239613036623837363730653366363032616662343035333736333762373435316538326364613038306139353166346233653631623337353639346237396430383639303861633562376161656432316363666565613862663031343263656431653539656637636161666134396235306562313366616661353565663663653635393636396536333666663033363161323734313831373864343235636134353961336138663932333561376232326137393962373634393439303266323036396234666332616237663963353531313738626533306134613663306536643464333237623431343030613633663435306433366336386131306239353461316165346439383237613062666265313338303765633865363033356237386639636136643531333439363562656138656163623633663034306437353939383436613434656433363939653839323230353161613239316461393830626636653338356636626332613531343331363861303737626434343134656663396664363463653333386330626138363330383266396138613533643939363733333039343562656337386361376637636137636165393536313135366633373438316439663366396632363336353235303938663265336333343537396366653364653031653833623135376662643334346562313865656138383865376264343532663238396366653031366135633137323132633531666166353261313466343766633866346263363035333333343434393832613934363230383165343938666363646136656638316536633430653765326533353332666165323365306639326637323265303731373336623566383134363931653537636266373032636462643564306265356465626636303366376430323033656537363037623464313033313366316261333238656134353561373230346238373266346661663531316330373630363837353432633264356164363135636432616262326135393535393461653836346164646531353638633162376162653837643539363666623431613532383764633835303730363931346532396235393134366661393166663331643764316231633534643832343439393936363231346534636431666531636538313664346233373630"
premium = 4236
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0a08050a02020102030405"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 4236
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0a08050a02020102030405"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 4236
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0a08050a02020102030405"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 4236
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0a08050a02020102030405"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
dataCoeff = [8, 5, 10, 2, 2,1,2,3,4,5,6,7,8,9,10]
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 5591
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0f08050a02020102030405060708090a"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 5591
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0f08050a02020102030405060708090a"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
dataCoeff = [8, 5, 10, 2, 2,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5]
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 6924
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x1408050a02020102030405060708090a0102030405"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
dataCoeff = [8, 5, 10, 2, 2,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10]
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 1169
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x1908050a02020102030405060708090a0102030405060708090a"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 1169
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x1908050a02020102030405060708090a0102030405060708090a"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
dataCoeff = [8, 5, 10, 2, 2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 4445
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x1908050a02020101010101010101010101010101010101010101"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
34.97637ms
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
34.97637ms
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
34.97637ms
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
dataCoeff = [8, 5, 10, 2, 2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 4934
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x1e08050a020201010101010101010101010101010101010101010101010101"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 4934
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x1e08050a020201010101010101010101010101010101010101010101010101"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 4934
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x1e08050a020201010101010101010101010101010101010101010101010101"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 4934
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x1e08050a020201010101010101010101010101010101010101010101010101"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 4934
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x1e08050a020201010101010101010101010101010101010101010101010101"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 4934
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x1e08050a020201010101010101010101010101010101010101010101010101"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 4934
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x1e08050a020201010101010101010101010101010101010101010101010101"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 4934
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x1e08050a020201010101010101010101010101010101010101010101010101"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 4934
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
dataCoeff = [8, 5, 10, 2, 2,1,1,1,1,1,1,1,1,1,1]
admin.genProof(tupleData, dataCoeff)
proof = "0x303039643137373735656330383333366263616534353362373564323434636335353839613632353436353430613433313665393538306539656338306462373136663364366130373137333639633039303030366338373339356462343439666234366537373265613264306465353263663634303738613333313038666331396464353838616231623130346562323233373764353337323264303433623861333065653639333863613839303762363937373537653735393938366133326333366261346162303537323131353866646231613131623233613232623864353761396630363462643937356535373164393863373062626532383736653032643964313835373132626536363666383562616630636330333131626237303839383138386564336532316164653430376235656166663661643866313731326131623933356464653234616632653862326530316231366638633566363238646138653730666661363764333237356264623038383363653932356666326134353966393431393933313932626431353663393063313564313164363461613337666333363562393930306233653062393731323230383134373834343162613462303534633332353236356363666237333663363764613436316638356534623665353932313638326366303431343263653532323535616331663331303434616637383533323534383937393463303832313930373261633336633266623765643035356531646532653764646636356363393138366462363065316237633237653035323831303665663137636132346666663666316231643631376636623734393465303365646636663034656664633837613437303031303065356261636537656239656431383335373663643866386139363337656263376365396664613763303130656165343164393962663266396263303932383731613764613836316162346261393739313736643765383735373434383431666236383434363565663530326235393736333237343734306262623538646663313135373436373765373762333761616638323662303434613235646238303833316665383639343438643666666637323762313830616631373531383537653030333964323663383933626533366365626538383636613061626166323031646662376632306662653265356230636439303834656536626239346136343430373763343535646662313931333931633935636639306233363334313834623935393733363361316537653730346361656364366637343066366261306630303133643237623163356630326432386133643333666138363137333164643337326434306465636237613135343838393733333634393738336233343266663238633662323966653138356366373362663535616331356362646264306338343761613132316634353933353430333932383435663163393561366535356132333338376535363064643661396232376663623265313466623239633862663431393565353838326465383637306666636335633538313239383136643030"
premium = 3339
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0f08050a020201010101010101010101"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, dataCoeff)
proof = "0x
premium = 3339
hashData = "0x6f18146bf56b9e3e57f410486b054d7c2da650728bad6621883dd24b6e8a29ff"
coeff = "0x0f08050a020201010101010101010101"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
abi=[{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"data_hash","type":"bytes32"},{"name":"result","type":"uint256"},{"name":"coefficent","type":"bytes"}],"name":"verifyProof","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
sample=eth.contract(abi)
SampleHEX="0x608060405234801561001057600080fd5b506102b9806100206000396000f3006080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166343d66ff98114610045575b600080fd5b34801561005157600080fd5b5061018b6004803603608081101561006857600080fd5b81019060208101813564010000000081111561008357600080fd5b82018360208201111561009557600080fd5b803590602001918460018302840111640100000000831117156100b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929584359560208601359591945092506060810191506040013564010000000081111561011657600080fd5b82018360208201111561012857600080fd5b8035906020019184600183028401116401000000008311171561014a57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061019d945050505050565b60408051918252519081900360200190f35b6000600c858585856040518085805190602001908083835b602083106101d45780518252601f1990920191602091820191016101b5565b51815160209384036101000a600019018019909216911617905292018681528083018690528451604090910192850191508083835b602083106102285780518252601f199092019160209182019101610209565b6001836020036101000a038019825116818451168082178552505050505050905001945050505050602060405180830381855afa15801561026d573d6000803e3d6000fd5b5050506040513d602081101561028257600080fd5b5051959450505050505600a165627a7a72305820c543424d0ae8d05b1b9e8565d42fbe46ac3861ac632fba9f3a82b576f8774e310029"
thesample=sample.new({from:eth.accounts[0],data:SampleHEX,gas:3000000}, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
txpool.status
miner.start()
miner.stop()
samplecontract=sample.at("0x6a9325a26a9271859511305b8e33645952a50e53")
hashData = [216, 194, 107, 66, 130, 103, 200, 77, 122, 149, 232, 129, 72, 193, 158, 64, 232, 251, 207, 230, 79, 186, 230, 175, 120, 25, 111, 156, 233, 247, 122, 221]
tupleData = [66, 206, 140, 3, 184, 102, 211, 171, 0, 126, 222, 62, 83, 222, 48, 145, 61, 247, 205, 114, 20, 81, 130, 238, 27, 141, 180, 140, 208, 138, 246, 154, 66, 206, 140, 3, 184, 102, 211, 171, 0, 126, 222, 62, 83, 222, 48, 145, 61, 247, 205, 114, 20, 81,130, 238, 27, 141, 180, 140, 208, 138, 246, 154]
dataCoeff = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
dataCoeff = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
hashData = [216, 194, 107, 66, 130, 103, 200, 77, 122, 149, 232, 129, 72, 193, 158, 64, 232, 251, 207, 230, 79, 186, 230, 175, 120, 25, 111, 156, 233, 247, 122, 221]
admin.genProof(tupleData, hashData,dataCoeff)
hashData = [216, 194, 107, 66, 130, 103, 200, 77, 122, 149, 232, 129, 72, 193, 158, 64, 232, 251, 207, 230, 79, 186, 230, 175, 120, 25, 111, 156, 233, 247, 122, 221]
admin.genProof(tupleData, hashData,dataCoeff)
dataCoeff = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 6663
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x1e010000000000000000000000000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, hashData,dataCoeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 6602
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x1e010000000000000000000000000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, hashData,dataCoeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [1, 1, 1, 0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 3670
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x1e010101000000000000000000000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [3, 3, 3, 0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 1101
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x1e030303000000000000000000000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x1e0a0a00000000000000000000000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, hashData,dataCoeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x316538313564303665373838333034386137373665303764626337353262626235333061616134633961373631646230663933653564373165643436663136383264623066663064393638393435393961346136313233326462383335626632626264653238333063376562313162393563366661636336616635613436346332656631343432376264366239316236343562386333323335356530393233333034373138346239326166663262313635333239383666613531376137376636303539303834343463666434313438376538623464336330353835623064373030643235386530623831643566393562333431386536616563333933653463313262366136616561396130356161346363306137363063303165323933316265663733633863386637393733616235383630663538623337383861343836396531656463636139363237313132323438373634633265666265363061343937303566353733666531336561333066343134363434316132313065613666303961316139343732343265333234363439396466323561643633623832646335646263663165646263633665313437666331633166656464303335323230383336653237393464383537333733633737326465343664626134343737633934663466303836386561323532393930313435653934396630316434353333633130333131356636633036346134313338323938353138653464336166653963643932343331333939613232313439633934383237623438373465633033623362386437306362316362323835306131333535333462333831306536353038356337313231366639316262393566643930323031306165646237333638346138656237633161663163396663343166353865313963316230333638353233353336313664646363643232373765313134383934643735323831623366653766333062356631376435313065393937303162353966303562373030356433636133636237313537376239393536333433306565356434653238623038613635643864633931313930396333313838356636313261396537633032366636393432343065393233333633333939613463333361356633643931646638633136613562386538383033636564346630623666633261303062656262396333303633633333393862616663313939633733333133616565316638613461376633623331653134633331323230363737376362303630653839663536613366626230346131313638653534616563613333323931386430666462613630663237626661643430373135303963346362323563303138366530663438326231343162653031623864356464386463393139626161613666646230313633363163663732386337336238653136373965323664323734303164306238656531663061363937303963626166383761356232333633396161346434373838376361383134623564643937613330396364316333633939303031633062643564353664353531636136353439613938623261393130343164356139363239376565306665616266336237626562"
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x1e0a0a00000000000000000000000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x1e0a0a00000000000000000000000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, hashData,dataCoeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x1e0a0a00000000000000000000000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, hashData,dataCoeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x1e0a0a00000000000000000000000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0,    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x1e0a0a00000000000000000000000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x0a0a0a0000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
admin.genProof(tupleData, hashData,dataCoeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x0a0a0a0000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x0a0a0a0000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x0a0a0a0000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x140a0a000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x140a0a000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x323331663665636266353430643366643930303036353938613661616166613662616134356638326138336564636262653062386335343566313365383030333330336366653965306335653836326638656436333936666138316263663437343337343564656239666137663363326537353237623062663331303837306433303034336335636339633733616330393361353262396630343363393563333464353035393835393335313038663564343366656431633434653866306436326163643435373831643338393433616634613836643361663335623338656462633639653339616530636430653138333661383834613632646536376539383163643635363237623164366530393031386663646466376463653237366262653836353632303136396639343862393830656562326235363166636431313130663730316335373734383539383030306165656661616635343436613833303238383135326265363664666138333561636430653262303531383931333865303437633539306131393763633032643837396461386635386238613131303033353262616438363435323965346362303334663233363332666430303032353266303438343032653338336161373636336539383032313432383865623238376565306232633361626363323435376466393332613362313964616337646430653431313030623930386239643537383033353239306432393834353161393634626463353362643533336665656564313066363231396236373231613465323733393562636339386161373465333762383431303836386234313064623137386433333639383336633433623730343532643430363139373965386538643030643561626262396338393966643231373562316532383864326566366534656663313235616335333033343166386330336364356566363264663163373230326236633335383037316137393865646361303264663063336663666462643361343939363539323732636435346632383539356365656134346164373263306366626236346136366530333239396264356430376533366633666463396538376364343932386134363461616136623034636661303733396331383062343231656561653531653566303835633838663265663962633338626564303932313139373965333239383533666635613532386462306136633832663331636630636165623765353065363232623431633736326166363836656466616130623133303730363236313666373763656539323762373739333837356137336237303330393932346533343032326237326331396630316636303330663639323866393134363839623162353133663162306131333361353833623839323532373237353161373662646235376630346231326635653761383132343137326637363839383663393830393536356233386462376338646262353830636134653930326238613132613936383061383139633530313232363538333463393865633533663932373230393736353662353164323435353937633134626164363664"
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x140a0a000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x280a0a0000000000000000000000000000000000000000000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x280a0a0000000000000000000000000000000000000000000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x280a0a0000000000000000000000000000000000000000000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x320a0a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
hashData = [239, 253, 11, 127, 28, 203, 161, 22, 46, 232, 22, 247, 49, 198, 43, 72, 89, 48, 81, 65, 153, 14, 92, 10, 206, 64, 211, 61, 11, 17, 103, 209]
tupleData = [66, 107, 194, 216, 77, 200, 103, 130, 129, 232, 149, 122, 64, 158, 193, 72, 230, 207, 251, 232, 175, 230, 186, 79, 156, 111, 25, 120, 221, 122, 247, 233, 3, 140, 206, 66, 171, 211, 102, 184, 62, 222, 126, 0, 145, 48, 222, 83, 114, 205, 247, 61, 238, 130, 81, 20, 140, 180, 141, 27, 154, 246, 138, 208]
dataCoeff = [10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
admin.genProof(tupleData, hashData,dataCoeff)
proof = "0x
premium = 1730
hashData = "0xeffd0b7f1ccba1162ee816f731c62b4859305141990e5c0ace40d33d0b1167d1"
coeff = "0x3c0a0a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
samplecontract.verifyProof.call(proof, hashData, premium, coeff)
eth.accounts
eth.getBalance(eth.accounts[1])
eth.getBalance(eth.accounts[0])
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
eth.sendTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
txpool.status
miner.start()
miner.stop()
eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[1])
eth.getBlock(1
)
eth.getTransaction("0xec82f8a2b65415a413ddb82965455277d9839dec1f055bfdbe20438404f2d310")
../go-ethereum/build/bin/geth --datadir signer/data --networkid 55661 --port 2002 --unlock 492f3232b3e2affb484ddebd3bc84c091b68626f --password signer/passwd.txt console
eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[1])
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
eth.sendTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.sendPublicTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[1])
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
eth.sendTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.sendPublicTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
eth.sendPublicTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
Web3
web3
web3.version
web3.version.api
eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[1])
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
eth.sendPublicTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.sendMintTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.sendDepositTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.sendUpdateTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.sendRedeemTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
txpool.status
miner.start()
miner.stop()
eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[1])
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
eth.sendPublicTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.getTransaction("0x6c19f678859d7f186ad2acdaf31901240cd71d2b88698bdde160c7b84d8f6de1")
admin.nodeInfo
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
eth.sendPublicTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.getTransaction("0x6574601485d50373ba7287288e0f22b221164fe3cd21fa96adeca3ecceb0e220")
eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[1])
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
eth.sendPublicTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.getTransaction("0x41ced02613c5737e3896b3038623b06996f53021479a221c3c72c5caf18caa94")
miner.start()
miner.stop()
eth.getBlock(1)
eth.getTransaction("0x41ced02613c5737e3896b3038623b06996f53021479a221c3c72c5caf18caa94")
eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[1])
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
eth.sendPublicTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.sendMintTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.sendDepositTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.sendUpdateTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.sendRedeemTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
txpool.status
miner.start()
miner.stop()
eth.getBlock(1)
eth.getTransaction("0x41ced02613c5737e3896b3038623b06996f53021479a221c3c72c5caf18caa94")
eth.getBlock(1)
eth.getTransaction("0x1bd55d6f87fcf5cb3856fda9784d92529003672541adfacfd6c4db471f3c0210")
eth.getTransaction("0xe7559cf962a9480bf868a3bc9854e811d795b3dff0045344203163d2392f7336")
eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[1])
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
eth.sendPublicTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.sendMintTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.sendDepositTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.sendUpdateTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.sendRedeemTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
txpool.status
miner.start()
miner.stop()
txpool.status
miner.start()
miner.stop()
eth.getBlock(1)
eth.getTransaction("0x41ced02613c5737e3896b3038623b06996f53021479a221c3c72c5caf18caa94")
eth.getBlock(1)
eth.getTransaction("0x03202f6f556c62aec942fb2791031efc8cc6003b720c9ac458cc432a8b7ccc08")
eth.getBlock(1)
eth.getTransaction("0x85c945341fea101f870963faaf6a0e9c32094636c66115a02ae6a34673c9a36b")
eth.getTransaction("0xab56e375f3ab45beca34e6ec882e3ddb8eae9bdab0cf8bc6577391279fd36208")
eth.getTransaction("0x103078a307d182553d8fc1a9ea83b6658795ac1a7a8d738f9326395b81287e40")
eth.getTransaction("0x41ced02613c5737e3896b3038623b06996f53021479a221c3c72c5caf18caa94")
eth.getTransactionCount()
eth.getTransactionCount(1)
eth.getTransactionCount
eth.getTransactionFromBlock(1)
eth.getTransactionFromBlock(2)
eth.getTransactionFromBlock(1,1)
eth.getTransactionFromBlock(1,2)
net.peerCount
sha3Msg = web3.sha3("blockchain")
signedData = eth.sign(eth.accounts[0], sha3Msg)
eth.sendPublicTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether")})
eth.sendMintTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:sha3Msg})
eth.sendDepositTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:signedData})
eth.sendUpdateTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether")})
eth.sendRedeemTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(0.05, "ether"), data:signedData})
txpool.status